### hdldb.xcva_top.MultiClock ### START: Thu May  9 14:43:13 2024

Found IXCOM RTL cell hdldb:ASSERTION

TraverseAdjustTernToBin.ForEachCell {
elapsed time: 0 sec.
} // TraverseAdjustTernToBin.ForEachCell
Memory size before 'design' command: 63 MB.
Statically allocated memory: 0 MB.

Importing User Data {
elapsed time: 0 sec.
} // Importing User Data

Flattening design hdldb xcva_top {
flat nets = 0, primitives = 0, nodes = 0; resident memory size: 293 MB (PDB pools size: 448 MB).
Processing UPF data elapsed time: 0 sec.
Building 'Feed Through' associations elapsed time: 0 sec.
Clean iScopedNets elapsed time: 0 sec.
Cell Markers elapsed time: 0 sec.
AssignGlobalNetTerms elapsed time: 0 sec.
UCDB_INPUT_NO_DELAY Terminal UA@.IXC_GFIFO.ISF._zyevPio[0] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.callEmuPI has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.ckgHoldPI has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[0] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[10] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[11] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[12] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[13] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[14] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[15] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[16] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[17] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[18] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[19] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[1] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[20] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[21] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[22] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[23] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[24] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[25] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[26] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[27] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[28] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[29] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[2] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[30] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[31] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[32] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[33] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[34] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[35] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[36] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[37] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[38] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[39] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[3] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[40] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[41] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[42] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[43] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[44] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[45] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[46] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[47] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[48] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[49] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[4] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[50] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[51] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[52] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[53] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[54] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[55] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[56] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[57] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[58] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[59] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[5] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[60] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[61] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[62] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[63] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[6] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[7] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[8] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.evalStepPI[9] has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.noOutputPI has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.oneStepPI has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.stopEmuPI has been created for top-cell
UCDB_INPUT_NO_DELAY Terminal UA@.xc_top.tbcHoldPI has been created for top-cell
CAs elapsed time: 0 sec.
Scoped Nets elapsed time: 0 sec.
Fix Scoped Nets elapsed time: 0 sec.
Init Stubs elapsed time: 0 sec.
Build Hierarchy elapsed time: 0 sec.
Clear Stubs elapsed time: 0 sec.
Build Nets elapsed time: 1 sec.
Presort Nets elapsed time: 0 sec.
Setup UD elapsed time: 0 sec.
OOMRs elapsed time: 0 sec.
Info : Have 0 misses when searching nodes/nets in the presorted container.
Unsort Nets elapsed time: 0 sec.
Fix OWTIs elapsed time: 0 sec.
Flattener(CreateRoot) elapsed time: 1 sec.
Unnamed nets: 56435, unnamed prims = 199708 (qtref = 199708)
elapsed time: 1 sec.
flat nets = 554660, primitives = 472161, nodes = 335330; resident memory size: 1889 MB (PDB pools size: 592 MB).
} // Flattening design hdldb xcva_top

Calculate gate count (primitives) mt-16 {

Calculate gate count (subaction: finish) {
elapsed time: 0 sec.
} // Calculate gate count (subaction: finish)
elapsed time: 0 sec.
} // Calculate gate count (primitives) mt-16

Calculate gate count (nets) mt-16 {

Calculate gate count (subaction: finish) {
elapsed time: 0 sec.
} // Calculate gate count (subaction: finish)
elapsed time: 0 sec.
} // Calculate gate count (nets) mt-16
Partition groups are OFF; hierarchical partitioning is OFF.

Collecting special properties {
Net xc_top.sdlStop is found.
Net xc_top.FvUseOnly is found.
Net xc_top.cpfStop is found.
Net xc_top.cpfAssert not found.
Net xc_top.hwClkDbgEn is found.
Net xc_top.hotSwapOnPI is found.
elapsed time: 0 sec.
} // Collecting special properties

Keeping IXCOM state devices {
elapsed time: 0 sec.
} // Keeping IXCOM state devices
Bi-directional I/O is supposed to be delayed by fclk cycle
REPORT (legacy-45668): File /lan/cva_rel/vxe23h1/23.03.131.s001/tools.lnx86/etc/triggers.list: trigger net QTLA%hdl_break not found.

Marking FV enabled regions {
elapsed time: 0 sec.
} // Marking FV enabled regions

Reading UPF data {
flat nets = 554665, primitives = 472163, nodes = 335335; resident memory size: 405 MB (PDB pools size: 592 MB).

power domains {
flat nets = 554665, primitives = 472163, nodes = 335335; resident memory size: 405 MB (PDB pools size: 592 MB).
set_partial_on_translation OFF
elapsed time: 0 sec.
flat nets = 554665, primitives = 472163, nodes = 335335; resident memory size: 405 MB (PDB pools size: 592 MB).
} // power domains
elapsed time: 0 sec.
flat nets = 554665, primitives = 472163, nodes = 335335; resident memory size: 405 MB (PDB pools size: 592 MB).
} // Reading UPF data

TraverseUA1Xmarkings.ForEachPrim {
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.DUMMY._zzqnthw.U0 (ixcEcmHoldOtb)
  <-- O IXC_GFIFO.DUMMY._zzqnthw.dummy
  --> I IXC_GFIFO.DUMMY._zzqnthw.sig
  --> E IXC_GFIFO.DUMMY._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.HOLDTOP._zzqnthw.U0 (ixcEcmHold)
  <-- O IXC_GFIFO.HOLDTOP._zzqnthw.dummy
  --> I IXC_GFIFO.HOLDTOP._zzqnthw.sig
  --> E IXC_GFIFO.HOLDTOP._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.I.I._zzqnthw.U0 (IXC_SV_SFIFO_VXE_256)
  <-- O IXC_GFIFO.I.I._zzqnthw.dummy
  --> I IXC_GFIFO.I.I._zzqnthw.sig
  --> E IXC_GFIFO.I.I._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.I.O._zzqnthw.U0 (IXC_SV_SCG_GFIFO_VXE_64)
  <-- O IXC_GFIFO.I.O._zzqnthw.dummy
  --> I IXC_GFIFO.I.O._zzqnthw.sig
  --> E IXC_GFIFO.I.O._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.ISF._zzqnthw.U0 (IXC_ISF)
  <-- O IXC_GFIFO.ISF._zzqnthw.dummy
  --> I IXC_GFIFO.ISF._zzqnthw.sig
  --> E IXC_GFIFO.ISF._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.O.O._zzqnthw.U0 (IXC_SV_GFIFO_VXE_256)
  <-- O IXC_GFIFO.O.O._zzqnthw.dummy
  --> I IXC_GFIFO.O.O._zzqnthw.sig
  --> E IXC_GFIFO.O.O._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.O.O.tbcx.soC.U0 (axis_tbcall_BP_1)
  <-- O IXC_GFIFO.O.O.tbcx.soC.dummy
  --> I IXC_GFIFO.O.O.tbcx.soC.sig
  --> E IXC_GFIFO.O.O.tbcx.soC.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.OSF._zzqnthw.U0 (IXC_OSF)
  <-- O IXC_GFIFO.OSF._zzqnthw.dummy
  --> I IXC_GFIFO.OSF._zzqnthw.sig
  --> E IXC_GFIFO.OSF._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.OSF1.OMB_0._zzqnthw.U0 (IXC_OSF_MB_20)
  <-- O IXC_GFIFO.OSF1.OMB_0._zzqnthw.dummy
  --> I IXC_GFIFO.OSF1.OMB_0._zzqnthw.sig
  --> E IXC_GFIFO.OSF1.OMB_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.OSF1._zzqnthw.U0 (IXC_OSF1)
  <-- O IXC_GFIFO.OSF1._zzqnthw.dummy
  --> I IXC_GFIFO.OSF1._zzqnthw.sig
  --> E IXC_GFIFO.OSF1._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) IXC_GFIFO.OSF1.tbcx.soC.U0 (axis_tbcall_1_0_1)
  <-- O IXC_GFIFO.OSF1.tbcx.soC.dummy
  --> I IXC_GFIFO.OSF1.tbcx.soC.sig
  --> E IXC_GFIFO.OSF1.tbcx.soC.dummy
---
DLYE (Q_CLKSRC) my_clks.ixcb_0.\genblk1.s .U0 (ixc_cakebind)
  <-- O my_clks.ixcb_0.\genblk1.s .dummy
  --> I tb_top.kme_tb_dut.my_clk
  --> E my_clks.ixcb_0.\genblk1.s .dummy
---
DLYE (Q_CLKSRC) my_clks.ixcg_0._zy_inst_0.U0 (ixc_master_clock)
  <-- O my_clks.ixcg_0._zy_inst_0.dummy
  --> I my_clks.ixcg_0.clk
  --> E my_clks.ixcg_0._zy_inst_0.dummy
---
DLYE (Q_CLKDRV) my_clks.ixcg_0.m1.c.U0 (ixc_1xbufsrc)
  <-- O my_clks.ixcg_0.m1.c.dummy
  --> I tb_top.kme_tb_dut.my_clk
  --> E my_clks.ixcg_0.m1.c.dummy
---

Clear main markers (nodes) mt-16 {

Clear main markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear main markers (subaction: finish)
elapsed time: 0 sec.
} // Clear main markers (nodes) mt-16
Q_MPCLKFAST DLYE (Q_MPCLKFAST) my_clks.ixcg_0.m1.f.U0 (ixc_1xbufsrc)
  <-- O my_clks.ixcg_0.m1.f.dummy
  --> I tb_top.kme_tb_dut.my_clk
  --> E my_clks.ixcg_0.m1.f.dummy
---
Q_MPCLK1P DLYE (Q_MPCLK1P) my_clks.ixcg_0.m1.m.U0 (ixc_1xbufsrc)
  <-- O my_clks.ixcg_0.m1.m.dummy
  --> I tb_top.kme_tb_dut.my_clk
  --> E my_clks.ixcg_0.m1.m.dummy
---
Q_MPCLK1P DLYE (Q_MPCLK1P) my_clks.ixcg_0.m1.n.U0 (ixc_1xbufsrc)
  <-- O my_clks.ixcg_0.m1.n.dummy
  --> I my_clks.ixcg_0._zy_simnet_clk_0_w$
  --> E my_clks.ixcg_0.m1.n.dummy
---
DLYE (Q_CLKSRC) my_clks.ixcg_0.m1.s.U0 (ixc_1xbufsrc)
  <-- O my_clks.ixcg_0.m1.s.dummy
  --> I tb_top.kme_tb_dut.my_clk
  --> E my_clks.ixcg_0.m1.s.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF0_L253_s3_p_7._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF0_L253_s3_p_7._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF0_L253_s3_p_7._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF0_L253_s3_p_7._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF0_L328_s3_p_2._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF0_L328_s3_p_2._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF0_L328_s3_p_2._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF0_L328_s3_p_2._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF0_L420_s2_p_5._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF0_L420_s2_p_5._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF0_L420_s2_p_5._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF0_L420_s2_p_5._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF0_L556_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF0_L556_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF0_L556_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF0_L556_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF12_L207_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF12_L207_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF12_L207_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF12_L207_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF17_L429_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF17_L429_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF17_L429_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF17_L429_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF18_L435_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF18_L435_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF18_L435_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF18_L435_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF19_L444_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF19_L444_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF19_L444_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF19_L444_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF1_L253_s3_p_8._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF1_L253_s3_p_8._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF1_L253_s3_p_8._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF1_L253_s3_p_8._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF1_L315_s2_p_1._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF1_L315_s2_p_1._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF1_L315_s2_p_1._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF1_L315_s2_p_1._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF1_L328_s2_p_3._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF1_L328_s2_p_3._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF1_L328_s2_p_3._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF1_L328_s2_p_3._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF21_L466_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF21_L466_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF21_L466_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF21_L466_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF27_L581_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF27_L581_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF27_L581_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF27_L581_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF2_L328_s2_p_4._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF2_L328_s2_p_4._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF2_L328_s2_p_4._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF2_L328_s2_p_4._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF30_L603_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF30_L603_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF30_L603_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF30_L603_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzGfifoF31_L608_p_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzGfifoF31_L608_p_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzGfifoF31_L608_p_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzGfifoF31_L608_p_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzM2L253_mdxP5_OnP._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L253_mdxP5_OnP._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzM2L253_mdxP5_OnP._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzM2L253_mdxP5_OnP._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzM2L253_pbcMevClk12._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L253_pbcMevClk12._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzM2L253_pbcMevClk12._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzM2L253_pbcMevClk12._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzM2L328_pbcMevClk4._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L328_pbcMevClk4._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzM2L328_pbcMevClk4._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzM2L328_pbcMevClk4._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzSfifoF0_L206_p._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzSfifoF0_L206_p._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzSfifoF0_L206_p._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzSfifoF0_L206_p._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzSfifoF1_L206_p._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzSfifoF1_L206_p._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzSfifoF1_L206_p._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzSfifoF1_L206_p._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzSfifoF3_L207_p._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzSfifoF3_L207_p._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzSfifoF3_L207_p._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzSfifoF3_L207_p._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zz_zzictd_finishT_L10_0TbcP_L10.soC.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zz_zzictd_finishT_L10_0TbcP_L10.soC.dummy
  --> I tb_top.kme_tb_dut._zz_zzictd_finishT_L10_0TbcP_L10.soC.sig
  --> E tb_top.kme_tb_dut._zz_zzictd_finishT_L10_0TbcP_L10.soC.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzixc_tfport_0_0._zzqnthw.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzixc_tfport_0_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut._zzixc_tfport_0_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut._zzixc_tfport_0_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut._zzqnt.U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzqnt.dummy
  --> I tb_top.kme_tb_dut._zzqnt.sig
  --> E tb_top.kme_tb_dut._zzqnt.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOnP._zzqnthw.U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOnP._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOnP._zzqnthw.sig
  --> E tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOnP._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.apb_xactor._zzM3L61_pbcMevClk9._zzqnthw.U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L61_pbcMevClk9._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.apb_xactor._zzM3L61_pbcMevClk9._zzqnthw.sig
  --> E tb_top.kme_tb_dut.apb_xactor._zzM3L61_pbcMevClk9._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.apb_xactor._zzqnt.U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzqnt.dummy
  --> I tb_top.kme_tb_dut.apb_xactor._zzqnt.sig
  --> E tb_top.kme_tb_dut.apb_xactor._zzqnt.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.ckv_indirect_access.u_cntrl._zzixc_ctxrd_0._zzqnthw.U0 (nx_indirect_access_cntrl_v2_xcm126)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.ckv_indirect_access.u_cntrl._zzixc_ctxrd_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.ckv_indirect_access.u_cntrl._zzixc_ctxrd_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.ckv_indirect_access.u_cntrl._zzixc_ctxrd_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_COUNT._zzixc_ctxrd_0._zzqnthw.U0 (nx_roreg_indirect_access_xcm130)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_COUNT._zzixc_ctxrd_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_COUNT._zzixc_ctxrd_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_COUNT._zzixc_ctxrd_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132L132_bcMevClkP0._zzqnthw.U0 (nx_reg_indirect_access)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132L132_bcMevClkP0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132L132_bcMevClkP0._zzqnthw.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132L132_bcMevClkP0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxrd_0._zzqnthw.U0 (nx_reg_indirect_access)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxrd_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxrd_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxrd_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzfrcD._zzqnthw.U0 (nx_reg_indirect_access)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzfrcD._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzfrcD._zzqnthw.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzfrcD._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzqnthw.U0 (nx_reg_indirect_access)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzqnthw.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzixc_ctxwr_1._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzqnt.U0 (nx_reg_indirect_access)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzqnt.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzqnt.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzqnt.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0._zzixc_ctxrd_0._zzqnthw.U0 (nx_interface_monitor_xcm105)
  <-- O tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0._zzixc_ctxrd_0._zzqnthw.dummy
  --> I tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0._zzixc_ctxrd_0._zzqnthw.sig
  --> E tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0._zzixc_ctxrd_0._zzqnthw.dummy
---
Q_NOT_TOUCH DLYE (Q_NOT_TOUCH) xc_top._zzqnthw.U0 (xc_top_1)
  <-- O xc_top._zzqnthw.dummy
  --> I xc_top._zzqnthw.sig
  --> E xc_top._zzqnthw.dummy
---
Q_MPCLK1P DLYE (Q_MPCLK1P) xc_top.mc1pi.U0 (xc_top_1)
  <-- O xc_top.mc1pi.dummy
  --> I xc_top.clockMC
  --> E xc_top.mc1pi.dummy
---
DLYE (Q_CLKSRC) xc_top.mcsi.U0 (xc_top_1)
  <-- O xc_top.mcsi.dummy
  --> I xc_top.clockMC
  --> E xc_top.mcsi.dummy
---
DLYE (Q_MPCLK) xc_top.uc.U0 (xc_top_1)
  <-- O xc_top.uClk
  --> I xc_top.uClk
  --> E 
---
Q_MPCLK DLYE (Q_MPCLK) xc_top.uc.U0 (xc_top_1)
  <-- O xc_top.uClk
  --> I xc_top.uClk
  --> E 
---
elapsed time: 0 sec.
} // TraverseUA1Xmarkings.ForEachPrim

Disconnecting sourceless buffers {

Clear secondary markers (nets) mt-16 {

Clear secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers (nets) mt-16

Collect sourceless nets (nets) mt-16 {

Collect sourceless nets (subaction: finish) {
elapsed time: 0 sec.
} // Collect sourceless nets (subaction: finish)
elapsed time: 0 sec.
} // Collect sourceless nets (nets) mt-16
INFO (multclk-1946): Disconnected 160 sourceless buffers.
elapsed time: 0 sec.
} // Disconnecting sourceless buffers

Reading CLOCK_SOURCES {
elapsed time: 0 sec.
} // Reading CLOCK_SOURCES

DRC {
flat nets = 554665, primitives = 472163, nodes = 335335; resident memory size: 407 MB (PDB pools size: 592 MB).

unset UCDB keepnets (nets) mt-16 {

unset UCDB keepnets (subaction: finish) {
elapsed time: 0 sec.
} // unset UCDB keepnets (subaction: finish)
elapsed time: 0 sec.
} // unset UCDB keepnets (nets) mt-16

set UCDB keepnets (nets) mt-16 {

set UCDB keepnets (subaction: finish) {
elapsed time: 0 sec.
} // set UCDB keepnets (subaction: finish)
elapsed time: 0 sec.
} // set UCDB keepnets (nets) mt-16
elapsed time: 0 sec.
created 5120 unnamed nets and 3072 unnamed primitives.
flat nets = 457555, primitives = 447173, nodes = 336407; resident memory size: 3469 MB (PDB pools size: 768 MB).
} // DRC

Compressing PDB {
elapsed time: 0 sec.
} // Compressing PDB

Mark Q_LPULSE (primitives) mt-16 {

Mark Q_LPULSE (subaction: finish) {
elapsed time: 0 sec.
} // Mark Q_LPULSE (subaction: finish)
elapsed time: 0 sec.
} // Mark Q_LPULSE (primitives) mt-16

Clear not-forcible markings (nets) mt-16 {

Clear not-forcible markings (subaction: finish) {
elapsed time: 0 sec.
} // Clear not-forcible markings (subaction: finish)
elapsed time: 0 sec.
} // Clear not-forcible markings (nets) mt-16

Cleaning {
flat nets = 457555, primitives = 447173, nodes = 336407; resident memory size: 419 MB (PDB pools size: 592 MB).
Common expressions are merged.

unset UCDB keepnets (nets) mt-16 {

unset UCDB keepnets (subaction: finish) {
elapsed time: 0 sec.
} // unset UCDB keepnets (subaction: finish)
elapsed time: 0 sec.
} // unset UCDB keepnets (nets) mt-16
Clear all markers (primitives) mt-16 {
Clear all markers (subaction: finish) {
elapsed time: 0 sec; resident memory size: 419 MB.
} // Clear all markers (subaction: finish)
elapsed time: 0 sec; resident memory size: 419 MB.
} // Clear all markers (primitives) mt-16
InitNetsQueueMT {
Initialize cleaning (nets) mt-16 {
Initialize cleaning (subaction: finish) {
elapsed time: 0 sec; resident memory size: 419 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 419 MB.
} // Initialize cleaning (nets) mt-16
Initialize cleaning (primitives) mt-16 {
Initialize cleaning (subaction: finish) {
elapsed time: 0 sec; resident memory size: 426 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 426 MB.
} // Initialize cleaning (primitives) mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 46806
elapsed time: 0 sec; resident memory size: 426 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 426 MB.
} // Reconnect buf/inv mt-16
elapsed time: 0 sec; resident memory size: 434 MB.
} // InitNetsQueueMT
Merge common expressions (primitives) mt-16 {
Merge common expressions (subaction: finish) {
elapsed time: 0 sec; resident memory size: 434 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 434 MB.
} // Merge common expressions (primitives) mt-16
Merge common expressions (nets) mt-16 {
Merge common expressions (subaction: finish) {
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (nets) mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 6245
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 1013
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
ProcessMergeMT {
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 11589
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 3473
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 3072
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 199
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 9764
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 4028
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 1580
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 99
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 3231
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 2215
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 838
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 67
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 994
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 790
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 104
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 37
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 179
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 103
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 26
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 23
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 191
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 93
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 69
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 13
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 299
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 36
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Assign constants mt-16 {
Assign constants (subaction: finish) {
Number of nets processed: 117
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Assign constants mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 124
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 737 MB.
} // AssignConstantsAndMerge
Number of merging steps: 8.
ProcessNetsQueueMT {
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 575
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 116
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 253
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 12
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 29
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 4
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 29
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 12
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 29
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 4
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 29
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 12
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 28
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 4
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 11
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 10
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 8
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 6
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 3
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 2
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Initialize cleaning mt-16 {
Initialize cleaning (subaction: finish) {
Number of primitives processed: 1
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 737 MB.
} // Initialize cleaning mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 737 MB.
} // CollectParentNets
Number of cleaning steps: 63.
elapsed time: 0 sec; resident memory size: 737 MB.
} // ProcessNetsQueueMT
elapsed time: 0 sec; resident memory size: 737 MB.
} // ProcessMergeMT
Collect disabled RAMs (primitives) mt-16 {
Collect disabled RAMs (subaction: finish) {
elapsed time: 0 sec; resident memory size: 434 MB.
} // Collect disabled RAMs (subaction: finish)
elapsed time: 0 sec; resident memory size: 434 MB.
} // Collect disabled RAMs (primitives) mt-16
MT base (disconnect) mt-16 {
MT base (subaction: finish) {
elapsed time: 0 sec; resident memory size: 434 MB.
} // MT base (subaction: finish)
elapsed time: 0 sec; resident memory size: 434 MB.
} // MT base (disconnect) mt-16
MT base (detach) mt-16 {
MT base (subaction: finish) {
elapsed time: 0 sec; resident memory size: 434 MB.
} // MT base (subaction: finish)
elapsed time: 0 sec; resident memory size: 434 MB.
} // MT base (detach) mt-16

MC cross-bucket constant propagation {
flat nets = 215654, primitives = 204836, nodes = 336407; resident memory size: 434 MB (PDB pools size: 592 MB).

Clear all markers (nets) mt-16 {

Clear all markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear all markers (subaction: finish)
elapsed time: 0 sec.
} // Clear all markers (nets) mt-16
elapsed time: 0 sec.
flat nets = 215654, primitives = 204836, nodes = 336407; resident memory size: 434 MB (PDB pools size: 592 MB).
} // MC cross-bucket constant propagation

set UCDB keepnets (nets) mt-16 {

set UCDB keepnets (subaction: finish) {
elapsed time: 0 sec.
} // set UCDB keepnets (subaction: finish)
elapsed time: 0 sec.
} // set UCDB keepnets (nets) mt-16
elapsed time: 1 sec.
flat nets = 215654, primitives = 204836, nodes = 336407; resident memory size: 434 MB (PDB pools size: 592 MB).
} // Cleaning

Compressing PDB {
elapsed time: 0 sec.
} // Compressing PDB

Building Registry {
elapsed time: 0 sec.
} // Building Registry

TraverseMultipleWEfanouts.ForEachNet {
elapsed time: 0 sec.
} // TraverseMultipleWEfanouts.ForEachNet

Checking syncs {
flat nets = 215654, primitives = 204836, nodes = 336407; resident memory size: 389 MB (PDB pools size: 544 MB).

Check bad syncs (primitives) mt-16 {

Check bad syncs (subaction: close pools) {
flat nets = 215670, primitives = 204836, nodes = 336423; resident memory size: 389 MB (PDB pools size: 560 MB).
elapsed time: 0 sec.
flat nets = 215742, primitives = 204836, nodes = 336423; resident memory size: 405 MB (PDB pools size: 560 MB).
} // Check bad syncs (subaction: close pools)

Check bad syncs (subaction: finish) {
flat nets = 215742, primitives = 204836, nodes = 336423; resident memory size: 405 MB (PDB pools size: 560 MB).
elapsed time: 0 sec.
flat nets = 215742, primitives = 204836, nodes = 336423; resident memory size: 405 MB (PDB pools size: 560 MB).
} // Check bad syncs (subaction: finish)
elapsed time: 0 sec.
flat nets = 215742, primitives = 204836, nodes = 336423; resident memory size: 405 MB (PDB pools size: 560 MB).
} // Check bad syncs (primitives) mt-16
elapsed time: 0 sec.
flat nets = 215742, primitives = 204836, nodes = 336423; resident memory size: 405 MB (PDB pools size: 560 MB).
} // Checking syncs
INFO (multclk-1277): Detected Z1 hardware configuration.
/lan/cva_rel/vxe23h1/23.03.131.s001/tools.lnx86/qtlib/mclk.llib elapsed time: 0 sec.

Initializing MultiClock {
flat nets = 215743, primitives = 204837, nodes = 336423; resident memory size: 410 MB (PDB pools size: 560 MB).

unset unnamed keepnets (nets) mt-16 {
flat nets = 215743, primitives = 204837, nodes = 336423; resident memory size: 410 MB (PDB pools size: 560 MB).

unset unnamed keepnets (subaction: finish) {
elapsed time: 0 sec.
} // unset unnamed keepnets (subaction: finish)
elapsed time: 0 sec.
} // unset unnamed keepnets (nets) mt-16
Cleared 0 unnamed keepnets.

Collecting exclusivity points {
Netlist allocation: 347318 nets.

Building CNF/DNF {

Clear secondary markers by mask (nets) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (nets) mt-16

Clear main markers (primitives) mt-16 {

Clear main markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear main markers (subaction: finish)
elapsed time: 0 sec.
} // Clear main markers (primitives) mt-16

SearchExclusiveCD_B (primitives) mt-16 {

SearchExclusiveCD_B (subaction: finish) {
elapsed time: 0 sec.
} // SearchExclusiveCD_B (subaction: finish)
elapsed time: 0 sec.
} // SearchExclusiveCD_B (primitives) mt-16
Found 4605 nets in combo cones that drive clocks.

SearchExclusiveCNF.ForEachNet {
elapsed time: 0 sec.
} // SearchExclusiveCNF.ForEachNet
Maximum CNF/DNF width: 79.
Total allocated memory: 64 MB, used: 0 MB.
elapsed time: 0 sec.
} // Building CNF/DNF

Clear secondary markers by mask (nets) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (nets) mt-16

Clear main markers (nets) mt-16 {

Clear main markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear main markers (subaction: finish)
elapsed time: 0 sec.
} // Clear main markers (nets) mt-16

SearchExclusiveCD_C0 (nets) mt-16 {

SearchExclusiveCD_C0 (subaction: finish) {
elapsed time: 0 sec.
} // SearchExclusiveCD_C0 (subaction: finish)
elapsed time: 0 sec.
} // SearchExclusiveCD_C0 (nets) mt-16
Marked 177882 nets that do not belong to clock domains.

SearchExclusiveCD_C {

SearchExclusiveCD_C.ForEachPrim {
elapsed time: 0 sec.
} // SearchExclusiveCD_C.ForEachPrim
elapsed time: 0 sec.
} // SearchExclusiveCD_C
Found 31829 nets in clock domains (maximum number of clocks in a domain: 35).
Total allocated memory: 64 MB, used: 0 MB.

Optimizing nets for exclusivity analysis (nets) mt-16 {

Optimizing nets for exclusivity analysis (subaction: finish) {
elapsed time: 0 sec.
} // Optimizing nets for exclusivity analysis (subaction: finish)
elapsed time: 0 sec.
} // Optimizing nets for exclusivity analysis (nets) mt-16

SearchExclusiveCD_B2.ForEachNet {
elapsed time: 0 sec.
} // SearchExclusiveCD_B2.ForEachNet

Exclusivity what-if analysis (nets) mt-16 {

TraverseSetInstrMarkers.ForEachCell {
elapsed time: 0 sec.
} // TraverseSetInstrMarkers.ForEachCell

Exclusivity what-if analysis (subaction: finish) {
elapsed time: 0 sec.
} // Exclusivity what-if analysis (subaction: finish)
elapsed time: 0 sec.
} // Exclusivity what-if analysis (nets) mt-16
Visited 7807 nets during constant propagations.

TraverseClearMarkers.ForEachCell {
elapsed time: 0 sec.
} // TraverseClearMarkers.ForEachCell
Found 0 exclusivity points.

Marking nets in SCCs {

Clear main markers (nets) mt-16 {

Clear main markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear main markers (subaction: finish)
elapsed time: 0 sec.
} // Clear main markers (nets) mt-16

Initialize Bucketing (primitives) mt-16 {

Initialize Bucketing (subaction: finish) {
elapsed time: 0 sec.
} // Initialize Bucketing (subaction: finish)
elapsed time: 0 sec.
} // Initialize Bucketing (primitives) mt-16

Clear secondary markers (nets) mt-16 {

Clear secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers (nets) mt-16

Clear high markers (nets) mt-16 {

Clear high markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear high markers (subaction: finish)
elapsed time: 0 sec.
} // Clear high markers (nets) mt-16
elapsed time: 0 sec.
} // Marking nets in SCCs
elapsed time: 0 sec.
} // Collecting exclusivity points

Inserting invertors {
flat nets = 215743, primitives = 204837, nodes = 336423; resident memory size: 419 MB (PDB pools size: 560 MB).

Insert D-input invertors (nets) mt-16 {

Insert D-input invertors (subaction: close pools) {
flat nets = 215759, primitives = 204837, nodes = 336439; resident memory size: 437 MB (PDB pools size: 720 MB).
elapsed time: 0 sec.
flat nets = 217066, primitives = 206144, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // Insert D-input invertors (subaction: close pools)

Insert D-input invertors (subaction: finish) {
flat nets = 217066, primitives = 206144, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
elapsed time: 0 sec.
flat nets = 217066, primitives = 206144, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // Insert D-input invertors (subaction: finish)
elapsed time: 0 sec.
flat nets = 217066, primitives = 206144, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // Insert D-input invertors (nets) mt-16
elapsed time: 0 sec.
flat nets = 217066, primitives = 206144, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // Inserting invertors

TraverseClearNetsUCDB.ForEachPrimSafe {
flat nets = 217066, primitives = 206144, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
elapsed time: 0 sec.
created 0 unnamed nets and 7380 unnamed primitives.
flat nets = 217066, primitives = 213524, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // TraverseClearNetsUCDB.ForEachPrimSafe

Initializing nets {
flat nets = 217066, primitives = 213524, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).

Initialize MultiClock (nets) mt-16 {
flat nets = 217066, primitives = 213524, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).

Initialize MultiClock (subaction: finish) {
elapsed time: 0 sec.
} // Initialize MultiClock (subaction: finish)
elapsed time: 0 sec.
} // Initialize MultiClock (nets) mt-16
elapsed time: 0 sec.
flat nets = 217066, primitives = 213524, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // Initializing nets

Reading clock info {
REPORT (legacy-38385): Design has 2 clock sources; one of the primary clocks is xc_top.fclk
elapsed time: 0 sec.
} // Reading clock info

Initializing primitives {
flat nets = 217066, primitives = 213522, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
Write-enable is blocked for level sensitive memories only.
Q_CCLKCHK primitive: (Q_CCLKCHK) IXC_GFIFO.O.O.tbcx.\genblk1.cchk .U0 (axis_tbcall_BP_1)
   attached to net: IXC_GFIFO.O.O.flushTbc
Q_CCLKCHK primitive: (Q_CCLKCHK) IXC_GFIFO.OSF.tbcx.\genblk1.cchk .U0 (axis_tbcall_BP_1)
   attached to net: tb_top.kme_tb_dut._zzixc_tfport_0_0.\genblk1.osfevcap .callEvent
Q_CCLKCHK primitive: (Q_CCLKCHK) IXC_GFIFO.OSF1.tbcx.\genblk1.cchk .U0 (axis_tbcall_1_0_1)
   attached to net: IXC_GFIFO.OSF1.osfTbc
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF0_L253_s3_p_7.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF0_L253_s3_req_7
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF0_L315_s2_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF0_L315_s2_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF0_L328_s3_p_2.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF0_L328_s3_req_2
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF0_L420_s2_p_5.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF0_L420_s2_req_5
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF0_L556_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF0_L556_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF0_L560_s2_p_6.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF0_L560_s2_req_6
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF12_L207_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF12_L207_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF13_L425_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF13_L425_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF16_L427_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF16_L427_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF17_L429_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF17_L429_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF18_L435_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF18_L435_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF19_L444_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF19_L444_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF1_L253_s3_p_8.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF1_L253_s3_req_8
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF1_L315_s2_p_1.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF1_L315_s2_req_1
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF1_L328_s2_p_3.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF1_L328_s2_req_3
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF20_L735_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF20_L735_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF21_L466_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF21_L466_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF22_L209_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF22_L209_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF25_L565_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF25_L565_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF26_L567_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF26_L567_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF27_L581_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF27_L581_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF28_L735_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF28_L735_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF29_L601_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF29_L601_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF2_L328_s2_p_4.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF2_L328_s2_req_4
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF30_L603_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF30_L603_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF31_L608_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF31_L608_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF32_L612_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF32_L612_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF33_L617_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF33_L617_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzGfifoF37_L272_p_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyGfifoF37_L272_req_0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zz_zzictd_finishT_L10_0TbcP_L10.\genblk1.cchk .U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyictd_finish_mgr
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut._zzixc_tfport_0_0.cchk.U0 (kme_tb)
   attached to net: tb_top.kme_tb_dut._zyixc_port_0_0_ack
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip0_key_tlv_rsm .u_cr_tlvp2_rsm.u_cr_fifo_wrap2_tob.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.cchk.U0 (nx_fifo_ctrl_ram_1r1w_xcm18)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip0_key_tlv_rsm .u_cr_tlvp2_rsm.u_cr_fifo_wrap2_tob.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.cchk.U0 (nx_fifo_ctrl_ram_1r1w_xcm17)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.cchk.U0 (nx_fifo_ctrl_ram_1r1w_xcm17)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.txc_axi_intf .u_cr_fifo_wrap2.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.cchk.U0 (nx_fifo_ctrl_ram_1r1w_xcm18)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.txc_axi_intf .u_cr_fifo_wrap2.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zyixc_port_1_0_req
Complex pulse net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132L132_bcMevClk0
Driving node: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132L132_bcMevClkP0.p0
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zyixc_port_1_1_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zyixc_port_1_1_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zyixc_port_1_1_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zyixc_port_1_1_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zyixc_port_1_1_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zyixc_port_1_1_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zyixc_port_1_1_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_0.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zyixc_port_1_0_req
Q_CCLKCHK primitive: (Q_CCLKCHK) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_1.cchk.U0 (nx_credit_manager)
   attached to net: tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zyixc_port_1_1_req
REPORT (legacy-38382): Flip-flops: 43842 (R: 21003 S: 221 RS: 0); latches: 12688 (R: 0 S: 1 RS: 1024);
       triregs: 0; delays (sourceless keepnets, edge detectors and Q_FDP0B): 10331; memory ports: 146.
       Total number of state devices: 66861; clock edges: 20; primary inputs: 71; memory outputs: 7962.
Total UCDB V-entries: 0.
elapsed time: 0 sec.
flat nets = 217066, primitives = 213522, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // Initializing primitives
REPORT (legacy-1311): Internal database gate count originally (for statistics only): 783958 (including memory access instrumentation: 808968).
REPORT (legacy-1311): Internal database gate count after remodeling and cleaning (for statistics only): 593514 (including memory access instrumentation: 618524).
elapsed time: 0 sec.
created 0 unnamed nets and 7380 unnamed primitives.
flat nets = 217066, primitives = 213522, nodes = 336439; resident memory size: 498 MB (PDB pools size: 720 MB).
} // Initializing MultiClock

Setting clock and data paths {
REPORT (legacy-38387): Pure clock nets: 2456; pure data nets: 193937; both: 3285.
Mixed clock-data inputs:
UA@.IXC_GFIFO.ISF._zyevPio[0]
UA@.xc_top.callEmuPI
UA@.xc_top.ckgHoldPI
UA@.xc_top.oneStepPI
elapsed time: 0 sec.
} // Setting clock and data paths

Setting exclusivity points {

Clear secondary markers by mask (primitives) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (primitives) mt-16

Clear secondary markers by mask (primitives) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (primitives) mt-16
elapsed time: 0 sec.
} // Setting exclusivity points

TraverseConnectUCDBswap.ForEachPrimSafe {
flat nets = 217066, primitives = 213522, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
elapsed time: 0 sec.
created 40 unnamed nets and 0 unnamed primitives.
flat nets = 217106, primitives = 213562, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
} // TraverseConnectUCDBswap.ForEachPrimSafe

TraverseConnectUCDBswap.ForEachNetSafe {
flat nets = 217106, primitives = 213562, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
elapsed time: 0 sec.
created 1324 unnamed nets and 1324 unnamed primitives.
flat nets = 218430, primitives = 214886, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
} // TraverseConnectUCDBswap.ForEachNetSafe

Collecting ALWAYS_ON flip-flops {
flat nets = 218430, primitives = 214886, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
Example of ALWAYS_ON flip-flop:
FDRSE (Q_FDP0) xc_top.\nextDutTimeP_REG[9] .U01 (xc_top_1)
  <-- Q xc_top.nextDutTimeP[9]
  --> D ixc_time.nextDutTime[9]
  --> CK xc_top.mcp
  --> CE 
  --> R 
  --> S 
---
ALWAYS_ON node: 'xc_top' (xc_top_1)
ALWAYS_ON clock 'xc_top.mcp' controls 64 flip-flops.========
Example of ALWAYS_ON flip-flop:
FDRSE (Q_FDP0) xc_top.\eCount_REG[9] .U01 (xc_top_1)
  <-- Q xc_top.eCount[9]
  --> D xc_top.n2889
  --> CK xc_top.eClk
  --> CE 
  --> R 
  --> S 
---
ALWAYS_ON node: 'xc_top' (xc_top_1)
ALWAYS_ON clock 'xc_top.eClk' controls 64 flip-flops.========
Example of ALWAYS_ON flip-flop:
FDRSE (Q_FDP4EP) xc_top.cakeUcEnable_REG.U00 (xc_top_1)
  <-- Q xc_top.cakeUcEnable
  --> D xc_top.n2504 pwr
  -->*CK xc_top.uClk
  --> CE xc_top.simTimeEnable
  --> R 
  --> S 
---
ALWAYS_ON node: 'xc_top' (xc_top_1)
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip0.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip1.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip2.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cceip3.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip0.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip1.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip2.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_nx_interface_monitor_cddip3.u_nx_credit_manager._zzixc_tfport_1_1.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U729.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n369
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_4_0.smUNNAMED_699050
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U732.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n365
  --> D IXC_GFIFO.DUMMY.cRet[0]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U733.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n364
  --> D IXC_GFIFO.DUMMY.cRet[1]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U734.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n363
  --> D IXC_GFIFO.DUMMY.cRet[2]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U740.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n357
  --> D IXC_GFIFO.DUMMY.cRet[8]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U741.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n356
  --> D IXC_GFIFO.DUMMY.cRet[9]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U742.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n355
  --> D IXC_GFIFO.DUMMY.cRet[10]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U743.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n354
  --> D IXC_GFIFO.DUMMY.cRet[11]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U744.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n353
  --> D IXC_GFIFO.DUMMY.cRet[12]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U745.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n352
  --> D IXC_GFIFO.DUMMY.cRet[13]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U746.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n351
  --> D IXC_GFIFO.DUMMY.cRet[14]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U747.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n350
  --> D IXC_GFIFO.DUMMY.cRet[15]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U796.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n301
  --> D IXC_GFIFO.DUMMY.ecmTs[0]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U797.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n300
  --> D IXC_GFIFO.DUMMY.ecmTs[1]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U798.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n299
  --> D IXC_GFIFO.DUMMY.ecmTs[2]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U799.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n298
  --> D IXC_GFIFO.DUMMY.ecmTs[3]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U800.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n297
  --> D IXC_GFIFO.DUMMY.ecmTs[4]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U801.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n296
  --> D IXC_GFIFO.DUMMY.ecmTs[5]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U802.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n295
  --> D IXC_GFIFO.DUMMY.ecmTs[6]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U803.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n294
  --> D IXC_GFIFO.DUMMY.ecmTs[7]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U804.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n293
  --> D IXC_GFIFO.DUMMY.ecmTs[8]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U805.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n292
  --> D IXC_GFIFO.DUMMY.ecmTs[9]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U806.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n291
  --> D IXC_GFIFO.DUMMY.ecmTs[10]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U807.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n290
  --> D IXC_GFIFO.DUMMY.ecmTs[11]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U808.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n289
  --> D IXC_GFIFO.DUMMY.ecmTs[12]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U809.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n288
  --> D IXC_GFIFO.DUMMY.ecmTs[13]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U810.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n287
  --> D IXC_GFIFO.DUMMY.ecmTs[14]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U811.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n286
  --> D IXC_GFIFO.DUMMY.ecmTs[15]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U812.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n285
  --> D IXC_GFIFO.DUMMY.ecmTs[16]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U813.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n284
  --> D IXC_GFIFO.DUMMY.ecmTs[17]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U814.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n283
  --> D IXC_GFIFO.DUMMY.ecmTs[18]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U815.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n282
  --> D IXC_GFIFO.DUMMY.ecmTs[19]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U816.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n281
  --> D IXC_GFIFO.DUMMY.ecmTs[20]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U817.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n280
  --> D IXC_GFIFO.DUMMY.ecmTs[21]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U818.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n279
  --> D IXC_GFIFO.DUMMY.ecmTs[22]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U819.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n278
  --> D IXC_GFIFO.DUMMY.ecmTs[23]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U820.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n277
  --> D IXC_GFIFO.DUMMY.ecmTs[24]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U821.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n276
  --> D IXC_GFIFO.DUMMY.ecmTs[25]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U822.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n275
  --> D IXC_GFIFO.DUMMY.ecmTs[26]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U823.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n274
  --> D IXC_GFIFO.DUMMY.ecmTs[27]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U824.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n273
  --> D IXC_GFIFO.DUMMY.ecmTs[28]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U825.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n272
  --> D IXC_GFIFO.DUMMY.ecmTs[29]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U826.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n271
  --> D IXC_GFIFO.DUMMY.ecmTs[30]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U827.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n270
  --> D IXC_GFIFO.DUMMY.ecmTs[31]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U828.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n269
  --> D IXC_GFIFO.DUMMY.ecmTs[32]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U829.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n268
  --> D IXC_GFIFO.DUMMY.ecmTs[33]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U830.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n267
  --> D IXC_GFIFO.DUMMY.ecmTs[34]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U831.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n266
  --> D IXC_GFIFO.DUMMY.ecmTs[35]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U832.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n265
  --> D IXC_GFIFO.DUMMY.ecmTs[36]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U833.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n264
  --> D IXC_GFIFO.DUMMY.ecmTs[37]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U834.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n263
  --> D IXC_GFIFO.DUMMY.ecmTs[38]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U835.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n262
  --> D IXC_GFIFO.DUMMY.ecmTs[39]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U836.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n261
  --> D IXC_GFIFO.DUMMY.ecmTs[40]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U837.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n260
  --> D IXC_GFIFO.DUMMY.ecmTs[41]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U838.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n259
  --> D IXC_GFIFO.DUMMY.ecmTs[42]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U839.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n258
  --> D IXC_GFIFO.DUMMY.ecmTs[43]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U840.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n257
  --> D IXC_GFIFO.DUMMY.ecmTs[44]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U841.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n256
  --> D IXC_GFIFO.DUMMY.ecmTs[45]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U842.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n255
  --> D IXC_GFIFO.DUMMY.ecmTs[46]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U843.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n254
  --> D IXC_GFIFO.DUMMY.ecmTs[47]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U844.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n253
  --> D IXC_GFIFO.DUMMY.ecmTs[48]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U845.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n252
  --> D IXC_GFIFO.DUMMY.ecmTs[49]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U846.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n251
  --> D IXC_GFIFO.DUMMY.ecmTs[50]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U847.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n250
  --> D IXC_GFIFO.DUMMY.ecmTs[51]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U848.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n249
  --> D IXC_GFIFO.DUMMY.ecmTs[52]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U849.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n248
  --> D IXC_GFIFO.DUMMY.ecmTs[53]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U850.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n247
  --> D IXC_GFIFO.DUMMY.ecmTs[54]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U851.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n246
  --> D IXC_GFIFO.DUMMY.ecmTs[55]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U852.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n245
  --> D IXC_GFIFO.DUMMY.ecmTs[56]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U853.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n244
  --> D IXC_GFIFO.DUMMY.ecmTs[57]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U854.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n243
  --> D IXC_GFIFO.DUMMY.ecmTs[58]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U855.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n242
  --> D IXC_GFIFO.DUMMY.ecmTs[59]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U856.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n241
  --> D IXC_GFIFO.DUMMY.ecmTs[60]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U857.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n240
  --> D IXC_GFIFO.DUMMY.ecmTs[61]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U858.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n239
  --> D IXC_GFIFO.DUMMY.ecmTs[62]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U859.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n238
  --> D IXC_GFIFO.DUMMY.ecmTs[63]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U860.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n237
  --> D xc_top.simTime[0]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U861.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n236
  --> D xc_top.simTime[1]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U862.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n235
  --> D xc_top.simTime[2]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U863.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n234
  --> D xc_top.simTime[3]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U864.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n233
  --> D xc_top.simTime[4]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U865.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n232
  --> D xc_top.simTime[5]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U866.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n231
  --> D xc_top.simTime[6]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U867.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n230
  --> D xc_top.simTime[7]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U868.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n229
  --> D xc_top.simTime[8]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U869.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n228
  --> D xc_top.simTime[9]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U870.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n227
  --> D xc_top.simTime[10]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U871.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n226
  --> D xc_top.simTime[11]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U872.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n225
  --> D xc_top.simTime[12]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U873.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n224
  --> D xc_top.simTime[13]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U874.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n223
  --> D xc_top.simTime[14]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U875.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n222
  --> D xc_top.simTime[15]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U876.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n221
  --> D xc_top.simTime[16]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U877.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n220
  --> D xc_top.simTime[17]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U878.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n219
  --> D xc_top.simTime[18]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U879.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n218
  --> D xc_top.simTime[19]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U880.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n217
  --> D xc_top.simTime[20]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U881.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n216
  --> D xc_top.simTime[21]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U882.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n215
  --> D xc_top.simTime[22]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U883.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n214
  --> D xc_top.simTime[23]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U884.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n213
  --> D xc_top.simTime[24]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U885.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n212
  --> D xc_top.simTime[25]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U886.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n211
  --> D xc_top.simTime[26]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U887.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n210
  --> D xc_top.simTime[27]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U888.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n209
  --> D xc_top.simTime[28]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U889.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n208
  --> D xc_top.simTime[29]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U890.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n207
  --> D xc_top.simTime[30]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U891.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n206
  --> D xc_top.simTime[31]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U892.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n205
  --> D xc_top.simTime[32]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U893.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n204
  --> D xc_top.simTime[33]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U894.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n203
  --> D xc_top.simTime[34]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U895.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n202
  --> D xc_top.simTime[35]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U896.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n201
  --> D xc_top.simTime[36]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U897.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n200
  --> D xc_top.simTime[37]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U898.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n199
  --> D xc_top.simTime[38]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U899.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n198
  --> D xc_top.simTime[39]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U900.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n197
  --> D xc_top.simTime[40]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U901.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n196
  --> D xc_top.simTime[41]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U902.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n195
  --> D xc_top.simTime[42]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U903.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n194
  --> D xc_top.simTime[43]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U904.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n193
  --> D xc_top.simTime[44]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U905.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n192
  --> D xc_top.simTime[45]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U906.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n191
  --> D xc_top.simTime[46]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U907.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n190
  --> D xc_top.simTime[47]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U908.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n189
  --> D xc_top.simTime[48]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U909.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n188
  --> D xc_top.simTime[49]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U910.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n187
  --> D xc_top.simTime[50]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U911.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n186
  --> D xc_top.simTime[51]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U912.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n185
  --> D xc_top.simTime[52]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U913.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n184
  --> D xc_top.simTime[53]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U914.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n183
  --> D xc_top.simTime[54]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U915.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n182
  --> D xc_top.simTime[55]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U916.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n181
  --> D xc_top.simTime[56]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U917.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n180
  --> D xc_top.simTime[57]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U918.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n179
  --> D xc_top.simTime[58]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U919.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n178
  --> D xc_top.simTime[59]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U920.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n177
  --> D xc_top.simTime[60]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U921.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n176
  --> D xc_top.simTime[61]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U922.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n175
  --> D xc_top.simTime[62]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.U923.U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.n174
  --> D xc_top.simTime[63]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[0] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[0]
  --> D IXC_GFIFO.DUMMY.n533
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[100] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[100]
  --> D IXC_GFIFO.DUMMY.n633
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[101] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[101]
  --> D IXC_GFIFO.DUMMY.n634
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[102] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[102]
  --> D IXC_GFIFO.DUMMY.n635
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[103] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[103]
  --> D IXC_GFIFO.DUMMY.n636
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[104] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[104]
  --> D IXC_GFIFO.DUMMY.n637
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[105] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[105]
  --> D IXC_GFIFO.DUMMY.n638
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[106] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[106]
  --> D IXC_GFIFO.DUMMY.n639
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[107] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[107]
  --> D IXC_GFIFO.DUMMY.n640
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[108] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[108]
  --> D IXC_GFIFO.DUMMY.n641
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[109] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[109]
  --> D IXC_GFIFO.DUMMY.n642
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[10] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[10]
  --> D IXC_GFIFO.DUMMY.n543
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[110] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[110]
  --> D IXC_GFIFO.DUMMY.n643
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[111] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[111]
  --> D IXC_GFIFO.DUMMY.n644
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[112] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[112]
  --> D IXC_GFIFO.DUMMY.n645
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[113] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[113]
  --> D IXC_GFIFO.DUMMY.n646
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[114] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[114]
  --> D IXC_GFIFO.DUMMY.n647
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[115] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[115]
  --> D IXC_GFIFO.DUMMY.n648
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[116] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[116]
  --> D IXC_GFIFO.DUMMY.n649
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[117] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[117]
  --> D IXC_GFIFO.DUMMY.n650
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[118] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[118]
  --> D IXC_GFIFO.DUMMY.n651
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[119] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[119]
  --> D IXC_GFIFO.DUMMY.n652
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[11] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[11]
  --> D IXC_GFIFO.DUMMY.n544
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[120] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[120]
  --> D IXC_GFIFO.DUMMY.n653
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[121] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[121]
  --> D IXC_GFIFO.DUMMY.n654
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[122] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[122]
  --> D IXC_GFIFO.DUMMY.n655
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[123] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[123]
  --> D IXC_GFIFO.DUMMY.n656
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[124] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[124]
  --> D IXC_GFIFO.DUMMY.n657
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[125] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[125]
  --> D IXC_GFIFO.DUMMY.n658
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[126] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[126]
  --> D IXC_GFIFO.DUMMY.n659
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[127] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[127]
  --> D IXC_GFIFO.DUMMY.n660
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[128] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[128]
  --> D IXC_GFIFO.DUMMY.n661
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[129] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[129]
  --> D IXC_GFIFO.DUMMY.n662
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[12] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[12]
  --> D IXC_GFIFO.DUMMY.n545
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[130] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[130]
  --> D IXC_GFIFO.DUMMY.n663
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[131] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[131]
  --> D IXC_GFIFO.DUMMY.n664
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[132] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[132]
  --> D IXC_GFIFO.DUMMY.n665
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[133] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[133]
  --> D IXC_GFIFO.DUMMY.n666
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[134] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[134]
  --> D IXC_GFIFO.DUMMY.n667
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[135] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[135]
  --> D IXC_GFIFO.DUMMY.n668
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[136] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[136]
  --> D IXC_GFIFO.DUMMY.n669
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[137] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[137]
  --> D IXC_GFIFO.DUMMY.n670
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[138] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[138]
  --> D IXC_GFIFO.DUMMY.n671
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[139] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[139]
  --> D IXC_GFIFO.DUMMY.n672
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[13] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[13]
  --> D IXC_GFIFO.DUMMY.n546
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[140] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[140]
  --> D IXC_GFIFO.DUMMY.n673
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[141] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[141]
  --> D IXC_GFIFO.DUMMY.n674
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[142] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[142]
  --> D IXC_GFIFO.DUMMY.n675
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[143] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[143]
  --> D IXC_GFIFO.DUMMY.n676
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[144] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[144]
  --> D IXC_GFIFO.DUMMY.n677
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[145] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[145]
  --> D IXC_GFIFO.DUMMY.n678
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[146] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[146]
  --> D IXC_GFIFO.DUMMY.n679
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[147] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[147]
  --> D IXC_GFIFO.DUMMY.n680
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[148] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[148]
  --> D IXC_GFIFO.DUMMY.n681
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[149] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[149]
  --> D IXC_GFIFO.DUMMY.n682
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[14] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[14]
  --> D IXC_GFIFO.DUMMY.n547
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[150] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[150]
  --> D IXC_GFIFO.DUMMY.n683
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[151] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[151]
  --> D IXC_GFIFO.DUMMY.n684
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[152] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[152]
  --> D IXC_GFIFO.DUMMY.n685
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[153] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[153]
  --> D IXC_GFIFO.DUMMY.n686
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[154] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[154]
  --> D IXC_GFIFO.DUMMY.n687
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[155] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[155]
  --> D IXC_GFIFO.DUMMY.n688
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[156] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[156]
  --> D IXC_GFIFO.DUMMY.n689
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[157] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[157]
  --> D IXC_GFIFO.DUMMY.n690
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[158] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[158]
  --> D IXC_GFIFO.DUMMY.n691
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[159] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[159]
  --> D IXC_GFIFO.DUMMY.n692
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[15] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[15]
  --> D IXC_GFIFO.DUMMY.n548
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[160] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[160]
  --> D IXC_GFIFO.DUMMY.n693
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[161] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[161]
  --> D IXC_GFIFO.DUMMY.n694
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[162] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[162]
  --> D IXC_GFIFO.DUMMY.n695
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[163] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[163]
  --> D IXC_GFIFO.DUMMY.n696
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[164] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[164]
  --> D IXC_GFIFO.DUMMY.n697
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[165] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[165]
  --> D IXC_GFIFO.DUMMY.n698
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[166] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[166]
  --> D IXC_GFIFO.DUMMY.n699
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[167] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[167]
  --> D IXC_GFIFO.DUMMY.n700
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[168] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[168]
  --> D IXC_GFIFO.DUMMY.n701
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[169] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[169]
  --> D IXC_GFIFO.DUMMY.n702
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[16] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[16]
  --> D IXC_GFIFO.DUMMY.n549
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[170] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[170]
  --> D IXC_GFIFO.DUMMY.n703
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[171] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[171]
  --> D IXC_GFIFO.DUMMY.n704
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[172] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[172]
  --> D IXC_GFIFO.DUMMY.n705
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[173] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[173]
  --> D IXC_GFIFO.DUMMY.n706
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[174] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[174]
  --> D IXC_GFIFO.DUMMY.n707
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[175] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[175]
  --> D IXC_GFIFO.DUMMY.n708
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[176] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[176]
  --> D IXC_GFIFO.DUMMY.n709
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[177] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[177]
  --> D IXC_GFIFO.DUMMY.n710
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[178] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[178]
  --> D IXC_GFIFO.DUMMY.n711
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[179] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[179]
  --> D IXC_GFIFO.DUMMY.n712
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[17] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[17]
  --> D IXC_GFIFO.DUMMY.n550
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[180] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[180]
  --> D IXC_GFIFO.DUMMY.n713
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[181] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[181]
  --> D IXC_GFIFO.DUMMY.n714
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[182] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[182]
  --> D IXC_GFIFO.DUMMY.n715
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[183] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[183]
  --> D IXC_GFIFO.DUMMY.n716
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[184] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[184]
  --> D IXC_GFIFO.DUMMY.n717
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[185] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[185]
  --> D IXC_GFIFO.DUMMY.n718
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[186] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[186]
  --> D IXC_GFIFO.DUMMY.n719
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[187] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[187]
  --> D IXC_GFIFO.DUMMY.n720
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[188] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[188]
  --> D IXC_GFIFO.DUMMY.n721
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[189] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[189]
  --> D IXC_GFIFO.DUMMY.n722
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[18] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[18]
  --> D IXC_GFIFO.DUMMY.n551
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[190] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[190]
  --> D IXC_GFIFO.DUMMY.n723
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[191] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[191]
  --> D IXC_GFIFO.DUMMY.n724
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[192] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[192]
  --> D IXC_GFIFO.DUMMY.n725
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[193] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[193]
  --> D IXC_GFIFO.DUMMY.n726
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[194] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[194]
  --> D IXC_GFIFO.DUMMY.n727
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[195] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[195]
  --> D IXC_GFIFO.DUMMY.n728
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[196] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[196]
  --> D IXC_GFIFO.DUMMY.n729
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[197] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[197]
  --> D IXC_GFIFO.DUMMY.n730
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[198] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[198]
  --> D IXC_GFIFO.DUMMY.n731
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[199] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[199]
  --> D IXC_GFIFO.DUMMY.n732
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[19] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[19]
  --> D IXC_GFIFO.DUMMY.n552
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[1] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[1]
  --> D IXC_GFIFO.DUMMY.n534
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[200] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[200]
  --> D IXC_GFIFO.DUMMY.n733
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[201] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[201]
  --> D IXC_GFIFO.DUMMY.n734
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[202] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[202]
  --> D IXC_GFIFO.DUMMY.n735
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[203] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[203]
  --> D IXC_GFIFO.DUMMY.n736
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[204] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[204]
  --> D IXC_GFIFO.DUMMY.n737
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[205] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[205]
  --> D IXC_GFIFO.DUMMY.n738
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[206] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[206]
  --> D IXC_GFIFO.DUMMY.n739
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[207] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[207]
  --> D IXC_GFIFO.DUMMY.n740
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[208] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[208]
  --> D IXC_GFIFO.DUMMY.n741
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[209] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[209]
  --> D IXC_GFIFO.DUMMY.n742
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[20] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[20]
  --> D IXC_GFIFO.DUMMY.n553
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[210] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[210]
  --> D IXC_GFIFO.DUMMY.n743
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[211] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[211]
  --> D IXC_GFIFO.DUMMY.n744
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[212] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[212]
  --> D IXC_GFIFO.DUMMY.n745
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[213] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[213]
  --> D IXC_GFIFO.DUMMY.n746
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[214] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[214]
  --> D IXC_GFIFO.DUMMY.n747
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[215] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[215]
  --> D IXC_GFIFO.DUMMY.n748
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[216] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[216]
  --> D IXC_GFIFO.DUMMY.n749
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[217] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[217]
  --> D IXC_GFIFO.DUMMY.n750
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[218] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[218]
  --> D IXC_GFIFO.DUMMY.n751
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[219] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[219]
  --> D IXC_GFIFO.DUMMY.n752
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[21] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[21]
  --> D IXC_GFIFO.DUMMY.n554
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[220] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[220]
  --> D IXC_GFIFO.DUMMY.n753
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[221] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[221]
  --> D IXC_GFIFO.DUMMY.n754
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[222] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[222]
  --> D IXC_GFIFO.DUMMY.n755
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[223] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[223]
  --> D IXC_GFIFO.DUMMY.n756
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[224] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[224]
  --> D IXC_GFIFO.DUMMY.n757
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[225] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[225]
  --> D IXC_GFIFO.DUMMY.n758
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[226] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[226]
  --> D IXC_GFIFO.DUMMY.n759
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[227] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[227]
  --> D IXC_GFIFO.DUMMY.n760
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[228] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[228]
  --> D IXC_GFIFO.DUMMY.n761
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[229] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[229]
  --> D IXC_GFIFO.DUMMY.n762
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[22] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[22]
  --> D IXC_GFIFO.DUMMY.n555
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[230] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[230]
  --> D IXC_GFIFO.DUMMY.n763
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[231] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[231]
  --> D IXC_GFIFO.DUMMY.n764
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[232] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[232]
  --> D IXC_GFIFO.DUMMY.n765
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[233] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[233]
  --> D IXC_GFIFO.DUMMY.n766
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[234] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[234]
  --> D IXC_GFIFO.DUMMY.n767
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[235] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[235]
  --> D IXC_GFIFO.DUMMY.n768
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[236] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[236]
  --> D IXC_GFIFO.DUMMY.n769
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[237] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[237]
  --> D IXC_GFIFO.DUMMY.n770
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[238] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[238]
  --> D IXC_GFIFO.DUMMY.n771
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[239] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[239]
  --> D IXC_GFIFO.DUMMY.n772
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[23] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[23]
  --> D IXC_GFIFO.DUMMY.n556
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[240] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[240]
  --> D IXC_GFIFO.DUMMY.n773
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[241] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[241]
  --> D IXC_GFIFO.DUMMY.n774
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[242] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[242]
  --> D IXC_GFIFO.DUMMY.n775
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[243] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[243]
  --> D IXC_GFIFO.DUMMY.n776
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[244] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[244]
  --> D IXC_GFIFO.DUMMY.n777
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[245] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[245]
  --> D IXC_GFIFO.DUMMY.n778
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[246] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[246]
  --> D IXC_GFIFO.DUMMY.n779
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[247] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[247]
  --> D IXC_GFIFO.DUMMY.n780
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[248] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[248]
  --> D IXC_GFIFO.DUMMY.n781
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[249] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[249]
  --> D IXC_GFIFO.DUMMY.n782
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[24] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[24]
  --> D IXC_GFIFO.DUMMY.n557
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[250] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[250]
  --> D IXC_GFIFO.DUMMY.n783
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[251] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[251]
  --> D IXC_GFIFO.DUMMY.n784
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[252] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[252]
  --> D IXC_GFIFO.DUMMY.n785
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[253] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[253]
  --> D IXC_GFIFO.DUMMY.n786
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[254] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[254]
  --> D IXC_GFIFO.DUMMY.n787
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[255] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[255]
  --> D IXC_GFIFO.DUMMY.n788
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[25] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[25]
  --> D IXC_GFIFO.DUMMY.n558
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[26] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[26]
  --> D IXC_GFIFO.DUMMY.n559
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[27] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[27]
  --> D IXC_GFIFO.DUMMY.n560
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[28] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[28]
  --> D IXC_GFIFO.DUMMY.n561
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[29] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[29]
  --> D IXC_GFIFO.DUMMY.n562
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[2] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[2]
  --> D IXC_GFIFO.DUMMY.n535
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[30] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[30]
  --> D IXC_GFIFO.DUMMY.n563
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[31] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[31]
  --> D IXC_GFIFO.DUMMY.n564
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[32] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[32]
  --> D IXC_GFIFO.DUMMY.n565
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[33] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[33]
  --> D IXC_GFIFO.DUMMY.n566
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[34] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[34]
  --> D IXC_GFIFO.DUMMY.n567
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[35] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[35]
  --> D IXC_GFIFO.DUMMY.n568
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[36] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[36]
  --> D IXC_GFIFO.DUMMY.n569
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[37] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[37]
  --> D IXC_GFIFO.DUMMY.n570
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[38] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[38]
  --> D IXC_GFIFO.DUMMY.n571
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[39] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[39]
  --> D IXC_GFIFO.DUMMY.n572
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[3] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[3]
  --> D IXC_GFIFO.DUMMY.n536
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[40] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[40]
  --> D IXC_GFIFO.DUMMY.n573
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[41] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[41]
  --> D IXC_GFIFO.DUMMY.n574
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[42] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[42]
  --> D IXC_GFIFO.DUMMY.n575
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[43] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[43]
  --> D IXC_GFIFO.DUMMY.n576
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[44] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[44]
  --> D IXC_GFIFO.DUMMY.n577
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[45] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[45]
  --> D IXC_GFIFO.DUMMY.n578
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[46] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[46]
  --> D IXC_GFIFO.DUMMY.n579
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[47] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[47]
  --> D IXC_GFIFO.DUMMY.n580
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[48] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[48]
  --> D IXC_GFIFO.DUMMY.n581
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[49] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[49]
  --> D IXC_GFIFO.DUMMY.n582
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[4] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[4]
  --> D IXC_GFIFO.DUMMY.n537
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[50] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[50]
  --> D IXC_GFIFO.DUMMY.n583
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[51] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[51]
  --> D IXC_GFIFO.DUMMY.n584
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[52] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[52]
  --> D IXC_GFIFO.DUMMY.n585
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[53] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[53]
  --> D IXC_GFIFO.DUMMY.n586
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[54] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[54]
  --> D IXC_GFIFO.DUMMY.n587
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[55] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[55]
  --> D IXC_GFIFO.DUMMY.n588
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[56] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[56]
  --> D IXC_GFIFO.DUMMY.n589
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[57] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[57]
  --> D IXC_GFIFO.DUMMY.n590
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[58] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[58]
  --> D IXC_GFIFO.DUMMY.n591
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[59] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[59]
  --> D IXC_GFIFO.DUMMY.n592
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[5] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[5]
  --> D IXC_GFIFO.DUMMY.n538
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[60] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[60]
  --> D IXC_GFIFO.DUMMY.n593
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[61] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[61]
  --> D IXC_GFIFO.DUMMY.n594
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[62] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[62]
  --> D IXC_GFIFO.DUMMY.n595
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[63] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[63]
  --> D IXC_GFIFO.DUMMY.n596
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[64] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[64]
  --> D IXC_GFIFO.DUMMY.n597
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[65] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[65]
  --> D IXC_GFIFO.DUMMY.n598
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[66] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[66]
  --> D IXC_GFIFO.DUMMY.n599
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[67] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[67]
  --> D IXC_GFIFO.DUMMY.n600
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[68] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[68]
  --> D IXC_GFIFO.DUMMY.n601
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[69] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[69]
  --> D IXC_GFIFO.DUMMY.n602
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[6] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[6]
  --> D IXC_GFIFO.DUMMY.n539
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[70] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[70]
  --> D IXC_GFIFO.DUMMY.n603
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[71] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[71]
  --> D IXC_GFIFO.DUMMY.n604
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[72] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[72]
  --> D IXC_GFIFO.DUMMY.n605
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[73] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[73]
  --> D IXC_GFIFO.DUMMY.n606
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[74] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[74]
  --> D IXC_GFIFO.DUMMY.n607
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[75] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[75]
  --> D IXC_GFIFO.DUMMY.n608
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[76] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[76]
  --> D IXC_GFIFO.DUMMY.n609
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[77] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[77]
  --> D IXC_GFIFO.DUMMY.n610
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[78] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[78]
  --> D IXC_GFIFO.DUMMY.n611
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[79] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[79]
  --> D IXC_GFIFO.DUMMY.n612
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[7] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[7]
  --> D IXC_GFIFO.DUMMY.n540
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[80] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[80]
  --> D IXC_GFIFO.DUMMY.n613
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[81] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[81]
  --> D IXC_GFIFO.DUMMY.n614
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[82] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[82]
  --> D IXC_GFIFO.DUMMY.n615
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[83] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[83]
  --> D IXC_GFIFO.DUMMY.n616
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[84] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[84]
  --> D IXC_GFIFO.DUMMY.n617
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[85] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[85]
  --> D IXC_GFIFO.DUMMY.n618
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[86] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[86]
  --> D IXC_GFIFO.DUMMY.n619
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[87] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[87]
  --> D IXC_GFIFO.DUMMY.n620
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[88] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[88]
  --> D IXC_GFIFO.DUMMY.n621
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[89] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[89]
  --> D IXC_GFIFO.DUMMY.n622
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[8] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[8]
  --> D IXC_GFIFO.DUMMY.n541
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[90] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[90]
  --> D IXC_GFIFO.DUMMY.n623
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[91] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[91]
  --> D IXC_GFIFO.DUMMY.n624
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[92] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[92]
  --> D IXC_GFIFO.DUMMY.n625
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[93] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[93]
  --> D IXC_GFIFO.DUMMY.n626
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[94] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[94]
  --> D IXC_GFIFO.DUMMY.n627
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[95] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[95]
  --> D IXC_GFIFO.DUMMY.n628
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[96] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[96]
  --> D IXC_GFIFO.DUMMY.n629
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[97] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[97]
  --> D IXC_GFIFO.DUMMY.n630
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[98] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[98]
  --> D IXC_GFIFO.DUMMY.n631
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[99] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[99]
  --> D IXC_GFIFO.DUMMY.n632
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.DUMMY.\ctrlR_REG[9] .U01 (ixcEcmHoldOtb)
  <-- Q IXC_GFIFO.DUMMY.ctrlR[9]
  --> D IXC_GFIFO.DUMMY.n542
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U259.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1741
  --> D IXC_GFIFO.HOLDTOP.ctrlW[255]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U260.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1740
  --> D IXC_GFIFO.HOLDTOP.ctrlW[254]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U261.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1739
  --> D IXC_GFIFO.HOLDTOP.ctrlW[253]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U262.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1738
  --> D IXC_GFIFO.HOLDTOP.ctrlW[252]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U263.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1737
  --> D IXC_GFIFO.HOLDTOP.ctrlW[251]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U264.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1736
  --> D IXC_GFIFO.HOLDTOP.ctrlW[250]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U265.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1735
  --> D IXC_GFIFO.HOLDTOP.ctrlW[249]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U266.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1734
  --> D IXC_GFIFO.HOLDTOP.ctrlW[248]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U267.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1733
  --> D IXC_GFIFO.HOLDTOP.ctrlW[247]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U268.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1732
  --> D IXC_GFIFO.HOLDTOP.ctrlW[246]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U269.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1731
  --> D IXC_GFIFO.HOLDTOP.ctrlW[245]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U270.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1730
  --> D IXC_GFIFO.HOLDTOP.ctrlW[244]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U271.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1729
  --> D IXC_GFIFO.HOLDTOP.ctrlW[243]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U272.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1728
  --> D IXC_GFIFO.HOLDTOP.ctrlW[242]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U273.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1727
  --> D IXC_GFIFO.HOLDTOP.ctrlW[241]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U274.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1726
  --> D IXC_GFIFO.HOLDTOP.ctrlW[240]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U275.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1725
  --> D IXC_GFIFO.HOLDTOP.ctrlW[239]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U276.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1724
  --> D IXC_GFIFO.HOLDTOP.ctrlW[238]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U277.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1723
  --> D IXC_GFIFO.HOLDTOP.ctrlW[237]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U278.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1722
  --> D IXC_GFIFO.HOLDTOP.ctrlW[236]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U279.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1721
  --> D IXC_GFIFO.HOLDTOP.ctrlW[235]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U280.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1720
  --> D IXC_GFIFO.HOLDTOP.ctrlW[234]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U281.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1719
  --> D IXC_GFIFO.HOLDTOP.ctrlW[233]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U282.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1718
  --> D IXC_GFIFO.HOLDTOP.ctrlW[232]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U283.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1717
  --> D IXC_GFIFO.HOLDTOP.ctrlW[231]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U284.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1716
  --> D IXC_GFIFO.HOLDTOP.ctrlW[230]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U285.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1715
  --> D IXC_GFIFO.HOLDTOP.ctrlW[229]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U286.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1714
  --> D IXC_GFIFO.HOLDTOP.ctrlW[228]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U287.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1713
  --> D IXC_GFIFO.HOLDTOP.ctrlW[227]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U288.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1712
  --> D IXC_GFIFO.HOLDTOP.ctrlW[226]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U289.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1711
  --> D IXC_GFIFO.HOLDTOP.ctrlW[225]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U290.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1710
  --> D IXC_GFIFO.HOLDTOP.ctrlW[224]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U291.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1709
  --> D IXC_GFIFO.HOLDTOP.ctrlW[223]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U292.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1708
  --> D IXC_GFIFO.HOLDTOP.ctrlW[222]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U293.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1707
  --> D IXC_GFIFO.HOLDTOP.ctrlW[221]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U294.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1706
  --> D IXC_GFIFO.HOLDTOP.ctrlW[220]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U295.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1705
  --> D IXC_GFIFO.HOLDTOP.ctrlW[219]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U296.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1704
  --> D IXC_GFIFO.HOLDTOP.ctrlW[218]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U297.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1703
  --> D IXC_GFIFO.HOLDTOP.ctrlW[217]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U298.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1702
  --> D IXC_GFIFO.HOLDTOP.ctrlW[216]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U299.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1701
  --> D IXC_GFIFO.HOLDTOP.ctrlW[215]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U300.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1700
  --> D IXC_GFIFO.HOLDTOP.ctrlW[214]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U301.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1699
  --> D IXC_GFIFO.HOLDTOP.ctrlW[213]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U302.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1698
  --> D IXC_GFIFO.HOLDTOP.ctrlW[212]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U303.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1697
  --> D IXC_GFIFO.HOLDTOP.ctrlW[211]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U304.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1696
  --> D IXC_GFIFO.HOLDTOP.ctrlW[210]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U305.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1695
  --> D IXC_GFIFO.HOLDTOP.ctrlW[209]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U306.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1694
  --> D IXC_GFIFO.HOLDTOP.ctrlW[208]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U307.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1693
  --> D IXC_GFIFO.HOLDTOP.ctrlW[207]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U308.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1692
  --> D IXC_GFIFO.HOLDTOP.ctrlW[206]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U309.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1691
  --> D IXC_GFIFO.HOLDTOP.ctrlW[205]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U310.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1690
  --> D IXC_GFIFO.HOLDTOP.ctrlW[204]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U311.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1689
  --> D IXC_GFIFO.HOLDTOP.ctrlW[203]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U312.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1688
  --> D IXC_GFIFO.HOLDTOP.ctrlW[202]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U313.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1687
  --> D IXC_GFIFO.HOLDTOP.ctrlW[201]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U314.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1686
  --> D IXC_GFIFO.HOLDTOP.ctrlW[200]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U315.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1685
  --> D IXC_GFIFO.HOLDTOP.ctrlW[199]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U316.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1684
  --> D IXC_GFIFO.HOLDTOP.ctrlW[198]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U317.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1683
  --> D IXC_GFIFO.HOLDTOP.ctrlW[197]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U318.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1682
  --> D IXC_GFIFO.HOLDTOP.ctrlW[196]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U319.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1681
  --> D IXC_GFIFO.HOLDTOP.ctrlW[195]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U320.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1680
  --> D IXC_GFIFO.HOLDTOP.ctrlW[194]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U321.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1679
  --> D IXC_GFIFO.HOLDTOP.ctrlW[193]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U322.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1678
  --> D IXC_GFIFO.HOLDTOP.ctrlW[192]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U387.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1613
  --> D IXC_GFIFO.HOLDTOP.ecmTs[63]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U388.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1612
  --> D IXC_GFIFO.HOLDTOP.ecmTs[62]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U389.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1611
  --> D IXC_GFIFO.HOLDTOP.ecmTs[61]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U390.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1610
  --> D IXC_GFIFO.HOLDTOP.ecmTs[60]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U391.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1609
  --> D IXC_GFIFO.HOLDTOP.ecmTs[59]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U392.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1608
  --> D IXC_GFIFO.HOLDTOP.ecmTs[58]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U393.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1607
  --> D IXC_GFIFO.HOLDTOP.ecmTs[57]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U394.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1606
  --> D IXC_GFIFO.HOLDTOP.ecmTs[56]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U395.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1605
  --> D IXC_GFIFO.HOLDTOP.ecmTs[55]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U396.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1604
  --> D IXC_GFIFO.HOLDTOP.ecmTs[54]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U397.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1603
  --> D IXC_GFIFO.HOLDTOP.ecmTs[53]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U398.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1602
  --> D IXC_GFIFO.HOLDTOP.ecmTs[52]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U399.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1601
  --> D IXC_GFIFO.HOLDTOP.ecmTs[51]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U400.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1600
  --> D IXC_GFIFO.HOLDTOP.ecmTs[50]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U401.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1599
  --> D IXC_GFIFO.HOLDTOP.ecmTs[49]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U402.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1598
  --> D IXC_GFIFO.HOLDTOP.ecmTs[48]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U403.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1597
  --> D IXC_GFIFO.HOLDTOP.ecmTs[47]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U404.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1596
  --> D IXC_GFIFO.HOLDTOP.ecmTs[46]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U405.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1595
  --> D IXC_GFIFO.HOLDTOP.ecmTs[45]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U406.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1594
  --> D IXC_GFIFO.HOLDTOP.ecmTs[44]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U407.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1593
  --> D IXC_GFIFO.HOLDTOP.ecmTs[43]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U408.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1592
  --> D IXC_GFIFO.HOLDTOP.ecmTs[42]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U409.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1591
  --> D IXC_GFIFO.HOLDTOP.ecmTs[41]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U410.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1590
  --> D IXC_GFIFO.HOLDTOP.ecmTs[40]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U411.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1589
  --> D IXC_GFIFO.HOLDTOP.ecmTs[39]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U412.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1588
  --> D IXC_GFIFO.HOLDTOP.ecmTs[38]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U413.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1587
  --> D IXC_GFIFO.HOLDTOP.ecmTs[37]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U414.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1586
  --> D IXC_GFIFO.HOLDTOP.ecmTs[36]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U415.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1585
  --> D IXC_GFIFO.HOLDTOP.ecmTs[35]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U416.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1584
  --> D IXC_GFIFO.HOLDTOP.ecmTs[34]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U417.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1583
  --> D IXC_GFIFO.HOLDTOP.ecmTs[33]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U418.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1582
  --> D IXC_GFIFO.HOLDTOP.ecmTs[32]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U419.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1581
  --> D IXC_GFIFO.HOLDTOP.ecmTs[31]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U420.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1580
  --> D IXC_GFIFO.HOLDTOP.ecmTs[30]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U421.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1579
  --> D IXC_GFIFO.HOLDTOP.ecmTs[29]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U422.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1578
  --> D IXC_GFIFO.HOLDTOP.ecmTs[28]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U423.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1577
  --> D IXC_GFIFO.HOLDTOP.ecmTs[27]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U424.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1576
  --> D IXC_GFIFO.HOLDTOP.ecmTs[26]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U425.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1575
  --> D IXC_GFIFO.HOLDTOP.ecmTs[25]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U426.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1574
  --> D IXC_GFIFO.HOLDTOP.ecmTs[24]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U427.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1573
  --> D IXC_GFIFO.HOLDTOP.ecmTs[23]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U428.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1572
  --> D IXC_GFIFO.HOLDTOP.ecmTs[22]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U429.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1571
  --> D IXC_GFIFO.HOLDTOP.ecmTs[21]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U430.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1570
  --> D IXC_GFIFO.HOLDTOP.ecmTs[20]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U431.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1569
  --> D IXC_GFIFO.HOLDTOP.ecmTs[19]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U432.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1568
  --> D IXC_GFIFO.HOLDTOP.ecmTs[18]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U433.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1567
  --> D IXC_GFIFO.HOLDTOP.ecmTs[17]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U434.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1566
  --> D IXC_GFIFO.HOLDTOP.ecmTs[16]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U435.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1565
  --> D IXC_GFIFO.HOLDTOP.ecmTs[15]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U436.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1564
  --> D IXC_GFIFO.HOLDTOP.ecmTs[14]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U437.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1563
  --> D IXC_GFIFO.HOLDTOP.ecmTs[13]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U438.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1562
  --> D IXC_GFIFO.HOLDTOP.ecmTs[12]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U439.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1561
  --> D IXC_GFIFO.HOLDTOP.ecmTs[11]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U440.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1560
  --> D IXC_GFIFO.HOLDTOP.ecmTs[10]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U441.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1559
  --> D IXC_GFIFO.HOLDTOP.ecmTs[9]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U442.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1558
  --> D IXC_GFIFO.HOLDTOP.ecmTs[8]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U443.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1557
  --> D IXC_GFIFO.HOLDTOP.ecmTs[7]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U444.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1556
  --> D IXC_GFIFO.HOLDTOP.ecmTs[6]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U445.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1555
  --> D IXC_GFIFO.HOLDTOP.ecmTs[5]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U446.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1554
  --> D IXC_GFIFO.HOLDTOP.ecmTs[4]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U447.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1553
  --> D IXC_GFIFO.HOLDTOP.ecmTs[3]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U448.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1552
  --> D IXC_GFIFO.HOLDTOP.ecmTs[2]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U449.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1551
  --> D IXC_GFIFO.HOLDTOP.ecmTs[1]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U450.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1550
  --> D IXC_GFIFO.HOLDTOP.ecmTs[0]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U499.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1501
  --> D IXC_GFIFO.HOLDTOP.cRet[15]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U500.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1500
  --> D IXC_GFIFO.HOLDTOP.cRet[14]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U501.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1499
  --> D IXC_GFIFO.HOLDTOP.cRet[13]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U502.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1498
  --> D IXC_GFIFO.HOLDTOP.cRet[12]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U503.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1497
  --> D IXC_GFIFO.HOLDTOP.cRet[11]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U504.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1496
  --> D IXC_GFIFO.HOLDTOP.cRet[10]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U505.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1495
  --> D IXC_GFIFO.HOLDTOP.cRet[9]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U506.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1494
  --> D IXC_GFIFO.HOLDTOP.cRet[8]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U511.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1489
  --> D IXC_GFIFO.HOLDTOP.cRet[3]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U512.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1488
  --> D IXC_GFIFO.HOLDTOP.cRet[2]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U513.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1487
  --> D IXC_GFIFO.HOLDTOP.cRet[1]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U514.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1486
  --> D IXC_GFIFO.HOLDTOP.cRet[0]
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.U517.U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.n1482
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_4_0.smUNNAMED_699053
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[0] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[0]
  --> D IXC_GFIFO.HOLDTOP.n593
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[100] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[100]
  --> D IXC_GFIFO.HOLDTOP.n493
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[101] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[101]
  --> D IXC_GFIFO.HOLDTOP.n492
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[102] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[102]
  --> D IXC_GFIFO.HOLDTOP.n491
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[103] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[103]
  --> D IXC_GFIFO.HOLDTOP.n490
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[104] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[104]
  --> D IXC_GFIFO.HOLDTOP.n489
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[105] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[105]
  --> D IXC_GFIFO.HOLDTOP.n488
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[106] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[106]
  --> D IXC_GFIFO.HOLDTOP.n487
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[107] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[107]
  --> D IXC_GFIFO.HOLDTOP.n486
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[108] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[108]
  --> D IXC_GFIFO.HOLDTOP.n485
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[109] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[109]
  --> D IXC_GFIFO.HOLDTOP.n484
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[10] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[10]
  --> D IXC_GFIFO.HOLDTOP.n583
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[110] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[110]
  --> D IXC_GFIFO.HOLDTOP.n483
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[111] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[111]
  --> D IXC_GFIFO.HOLDTOP.n482
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[112] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[112]
  --> D IXC_GFIFO.HOLDTOP.n481
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[113] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[113]
  --> D IXC_GFIFO.HOLDTOP.n480
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[114] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[114]
  --> D IXC_GFIFO.HOLDTOP.n479
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[115] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[115]
  --> D IXC_GFIFO.HOLDTOP.n478
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[116] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[116]
  --> D IXC_GFIFO.HOLDTOP.n477
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[117] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[117]
  --> D IXC_GFIFO.HOLDTOP.n476
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[118] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[118]
  --> D IXC_GFIFO.HOLDTOP.n475
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[119] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[119]
  --> D IXC_GFIFO.HOLDTOP.n474
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[11] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[11]
  --> D IXC_GFIFO.HOLDTOP.n582
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[120] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[120]
  --> D IXC_GFIFO.HOLDTOP.n473
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[121] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[121]
  --> D IXC_GFIFO.HOLDTOP.n472
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[122] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[122]
  --> D IXC_GFIFO.HOLDTOP.n471
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[123] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[123]
  --> D IXC_GFIFO.HOLDTOP.n470
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[124] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[124]
  --> D IXC_GFIFO.HOLDTOP.n469
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[125] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[125]
  --> D IXC_GFIFO.HOLDTOP.n468
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[126] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[126]
  --> D IXC_GFIFO.HOLDTOP.n467
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[127] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[127]
  --> D IXC_GFIFO.HOLDTOP.n466
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[128] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[128]
  --> D IXC_GFIFO.HOLDTOP.n465
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[129] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[129]
  --> D IXC_GFIFO.HOLDTOP.n464
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[12] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[12]
  --> D IXC_GFIFO.HOLDTOP.n581
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[130] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[130]
  --> D IXC_GFIFO.HOLDTOP.n463
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[131] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[131]
  --> D IXC_GFIFO.HOLDTOP.n462
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[132] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[132]
  --> D IXC_GFIFO.HOLDTOP.n461
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[133] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[133]
  --> D IXC_GFIFO.HOLDTOP.n460
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[134] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[134]
  --> D IXC_GFIFO.HOLDTOP.n459
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[135] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[135]
  --> D IXC_GFIFO.HOLDTOP.n458
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[136] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[136]
  --> D IXC_GFIFO.HOLDTOP.n457
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[137] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[137]
  --> D IXC_GFIFO.HOLDTOP.n456
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[138] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[138]
  --> D IXC_GFIFO.HOLDTOP.n455
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[139] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[139]
  --> D IXC_GFIFO.HOLDTOP.n454
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[13] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[13]
  --> D IXC_GFIFO.HOLDTOP.n580
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[140] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[140]
  --> D IXC_GFIFO.HOLDTOP.n453
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[141] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[141]
  --> D IXC_GFIFO.HOLDTOP.n452
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[142] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[142]
  --> D IXC_GFIFO.HOLDTOP.n451
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[143] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[143]
  --> D IXC_GFIFO.HOLDTOP.n450
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[144] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[144]
  --> D IXC_GFIFO.HOLDTOP.n449
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[145] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[145]
  --> D IXC_GFIFO.HOLDTOP.n448
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[146] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[146]
  --> D IXC_GFIFO.HOLDTOP.n447
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[147] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[147]
  --> D IXC_GFIFO.HOLDTOP.n446
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[148] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[148]
  --> D IXC_GFIFO.HOLDTOP.n445
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[149] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[149]
  --> D IXC_GFIFO.HOLDTOP.n444
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[14] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[14]
  --> D IXC_GFIFO.HOLDTOP.n579
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[150] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[150]
  --> D IXC_GFIFO.HOLDTOP.n443
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[151] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[151]
  --> D IXC_GFIFO.HOLDTOP.n442
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[152] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[152]
  --> D IXC_GFIFO.HOLDTOP.n441
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[153] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[153]
  --> D IXC_GFIFO.HOLDTOP.n440
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[154] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[154]
  --> D IXC_GFIFO.HOLDTOP.n439
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[155] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[155]
  --> D IXC_GFIFO.HOLDTOP.n438
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[156] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[156]
  --> D IXC_GFIFO.HOLDTOP.n437
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[157] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[157]
  --> D IXC_GFIFO.HOLDTOP.n436
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[158] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[158]
  --> D IXC_GFIFO.HOLDTOP.n435
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[159] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[159]
  --> D IXC_GFIFO.HOLDTOP.n434
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[15] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[15]
  --> D IXC_GFIFO.HOLDTOP.n578
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[160] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[160]
  --> D IXC_GFIFO.HOLDTOP.n433
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[161] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[161]
  --> D IXC_GFIFO.HOLDTOP.n432
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[162] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[162]
  --> D IXC_GFIFO.HOLDTOP.n431
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[163] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[163]
  --> D IXC_GFIFO.HOLDTOP.n430
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[164] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[164]
  --> D IXC_GFIFO.HOLDTOP.n429
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[165] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[165]
  --> D IXC_GFIFO.HOLDTOP.n428
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[166] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[166]
  --> D IXC_GFIFO.HOLDTOP.n427
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[167] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[167]
  --> D IXC_GFIFO.HOLDTOP.n426
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[168] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[168]
  --> D IXC_GFIFO.HOLDTOP.n425
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[169] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[169]
  --> D IXC_GFIFO.HOLDTOP.n424
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[16] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[16]
  --> D IXC_GFIFO.HOLDTOP.n577
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[170] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[170]
  --> D IXC_GFIFO.HOLDTOP.n423
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[171] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[171]
  --> D IXC_GFIFO.HOLDTOP.n422
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[172] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[172]
  --> D IXC_GFIFO.HOLDTOP.n421
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[173] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[173]
  --> D IXC_GFIFO.HOLDTOP.n420
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[174] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[174]
  --> D IXC_GFIFO.HOLDTOP.n419
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[175] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[175]
  --> D IXC_GFIFO.HOLDTOP.n418
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[176] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[176]
  --> D IXC_GFIFO.HOLDTOP.n417
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[177] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[177]
  --> D IXC_GFIFO.HOLDTOP.n416
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[178] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[178]
  --> D IXC_GFIFO.HOLDTOP.n415
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[179] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[179]
  --> D IXC_GFIFO.HOLDTOP.n414
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[17] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[17]
  --> D IXC_GFIFO.HOLDTOP.n576
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[180] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[180]
  --> D IXC_GFIFO.HOLDTOP.n413
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[181] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[181]
  --> D IXC_GFIFO.HOLDTOP.n412
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[182] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[182]
  --> D IXC_GFIFO.HOLDTOP.n411
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[183] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[183]
  --> D IXC_GFIFO.HOLDTOP.n410
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[184] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[184]
  --> D IXC_GFIFO.HOLDTOP.n409
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[185] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[185]
  --> D IXC_GFIFO.HOLDTOP.n408
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[186] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[186]
  --> D IXC_GFIFO.HOLDTOP.n407
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[187] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[187]
  --> D IXC_GFIFO.HOLDTOP.n406
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[188] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[188]
  --> D IXC_GFIFO.HOLDTOP.n405
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[189] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[189]
  --> D IXC_GFIFO.HOLDTOP.n404
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[18] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[18]
  --> D IXC_GFIFO.HOLDTOP.n575
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[190] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[190]
  --> D IXC_GFIFO.HOLDTOP.n403
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[191] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[191]
  --> D IXC_GFIFO.HOLDTOP.n402
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[192] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[192]
  --> D IXC_GFIFO.HOLDTOP.n401
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[193] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[193]
  --> D IXC_GFIFO.HOLDTOP.n400
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[194] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[194]
  --> D IXC_GFIFO.HOLDTOP.n399
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[195] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[195]
  --> D IXC_GFIFO.HOLDTOP.n398
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[196] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[196]
  --> D IXC_GFIFO.HOLDTOP.n397
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[197] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[197]
  --> D IXC_GFIFO.HOLDTOP.n396
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[198] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[198]
  --> D IXC_GFIFO.HOLDTOP.n395
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[199] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[199]
  --> D IXC_GFIFO.HOLDTOP.n394
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[19] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[19]
  --> D IXC_GFIFO.HOLDTOP.n574
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[1] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[1]
  --> D IXC_GFIFO.HOLDTOP.n592
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[200] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[200]
  --> D IXC_GFIFO.HOLDTOP.n393
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[201] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[201]
  --> D IXC_GFIFO.HOLDTOP.n392
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[202] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[202]
  --> D IXC_GFIFO.HOLDTOP.n391
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[203] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[203]
  --> D IXC_GFIFO.HOLDTOP.n390
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[204] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[204]
  --> D IXC_GFIFO.HOLDTOP.n389
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[205] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[205]
  --> D IXC_GFIFO.HOLDTOP.n388
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[206] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[206]
  --> D IXC_GFIFO.HOLDTOP.n387
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[207] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[207]
  --> D IXC_GFIFO.HOLDTOP.n386
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[208] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[208]
  --> D IXC_GFIFO.HOLDTOP.n385
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[209] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[209]
  --> D IXC_GFIFO.HOLDTOP.n384
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[20] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[20]
  --> D IXC_GFIFO.HOLDTOP.n573
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[210] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[210]
  --> D IXC_GFIFO.HOLDTOP.n383
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[211] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[211]
  --> D IXC_GFIFO.HOLDTOP.n382
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[212] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[212]
  --> D IXC_GFIFO.HOLDTOP.n381
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[213] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[213]
  --> D IXC_GFIFO.HOLDTOP.n380
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[214] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[214]
  --> D IXC_GFIFO.HOLDTOP.n379
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[215] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[215]
  --> D IXC_GFIFO.HOLDTOP.n378
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[216] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[216]
  --> D IXC_GFIFO.HOLDTOP.n377
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[217] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[217]
  --> D IXC_GFIFO.HOLDTOP.n376
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[218] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[218]
  --> D IXC_GFIFO.HOLDTOP.n375
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[219] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[219]
  --> D IXC_GFIFO.HOLDTOP.n374
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[21] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[21]
  --> D IXC_GFIFO.HOLDTOP.n572
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[220] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[220]
  --> D IXC_GFIFO.HOLDTOP.n373
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[221] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[221]
  --> D IXC_GFIFO.HOLDTOP.n372
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[222] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[222]
  --> D IXC_GFIFO.HOLDTOP.n371
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[223] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[223]
  --> D IXC_GFIFO.HOLDTOP.n370
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[224] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[224]
  --> D IXC_GFIFO.HOLDTOP.n369
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[225] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[225]
  --> D IXC_GFIFO.HOLDTOP.n368
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[226] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[226]
  --> D IXC_GFIFO.HOLDTOP.n367
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[227] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[227]
  --> D IXC_GFIFO.HOLDTOP.n366
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[228] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[228]
  --> D IXC_GFIFO.HOLDTOP.n365
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[229] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[229]
  --> D IXC_GFIFO.HOLDTOP.n364
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[22] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[22]
  --> D IXC_GFIFO.HOLDTOP.n571
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[230] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[230]
  --> D IXC_GFIFO.HOLDTOP.n363
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[231] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[231]
  --> D IXC_GFIFO.HOLDTOP.n362
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[232] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[232]
  --> D IXC_GFIFO.HOLDTOP.n361
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[233] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[233]
  --> D IXC_GFIFO.HOLDTOP.n360
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[234] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[234]
  --> D IXC_GFIFO.HOLDTOP.n359
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[235] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[235]
  --> D IXC_GFIFO.HOLDTOP.n358
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[236] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[236]
  --> D IXC_GFIFO.HOLDTOP.n357
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[237] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[237]
  --> D IXC_GFIFO.HOLDTOP.n356
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[238] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[238]
  --> D IXC_GFIFO.HOLDTOP.n355
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[239] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[239]
  --> D IXC_GFIFO.HOLDTOP.n354
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[23] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[23]
  --> D IXC_GFIFO.HOLDTOP.n570
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[240] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[240]
  --> D IXC_GFIFO.HOLDTOP.n353
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[241] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[241]
  --> D IXC_GFIFO.HOLDTOP.n352
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[242] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[242]
  --> D IXC_GFIFO.HOLDTOP.n351
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[243] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[243]
  --> D IXC_GFIFO.HOLDTOP.n350
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[244] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[244]
  --> D IXC_GFIFO.HOLDTOP.n349
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[245] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[245]
  --> D IXC_GFIFO.HOLDTOP.n348
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[246] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[246]
  --> D IXC_GFIFO.HOLDTOP.n347
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[247] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[247]
  --> D IXC_GFIFO.HOLDTOP.n346
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[248] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[248]
  --> D IXC_GFIFO.HOLDTOP.n345
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[249] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[249]
  --> D IXC_GFIFO.HOLDTOP.n344
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[24] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[24]
  --> D IXC_GFIFO.HOLDTOP.n569
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[250] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[250]
  --> D IXC_GFIFO.HOLDTOP.n343
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[251] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[251]
  --> D IXC_GFIFO.HOLDTOP.n342
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[252] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[252]
  --> D IXC_GFIFO.HOLDTOP.n341
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[253] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[253]
  --> D IXC_GFIFO.HOLDTOP.n340
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[254] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[254]
  --> D IXC_GFIFO.HOLDTOP.n339
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[255] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[255]
  --> D IXC_GFIFO.HOLDTOP.n338
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[25] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[25]
  --> D IXC_GFIFO.HOLDTOP.n568
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[26] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[26]
  --> D IXC_GFIFO.HOLDTOP.n567
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[27] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[27]
  --> D IXC_GFIFO.HOLDTOP.n566
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[28] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[28]
  --> D IXC_GFIFO.HOLDTOP.n565
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[29] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[29]
  --> D IXC_GFIFO.HOLDTOP.n564
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[2] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[2]
  --> D IXC_GFIFO.HOLDTOP.n591
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[30] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[30]
  --> D IXC_GFIFO.HOLDTOP.n563
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[31] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[31]
  --> D IXC_GFIFO.HOLDTOP.n562
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[32] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[32]
  --> D IXC_GFIFO.HOLDTOP.n561
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[33] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[33]
  --> D IXC_GFIFO.HOLDTOP.n560
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[34] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[34]
  --> D IXC_GFIFO.HOLDTOP.n559
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[35] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[35]
  --> D IXC_GFIFO.HOLDTOP.n558
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[36] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[36]
  --> D IXC_GFIFO.HOLDTOP.n557
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[37] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[37]
  --> D IXC_GFIFO.HOLDTOP.n556
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[38] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[38]
  --> D IXC_GFIFO.HOLDTOP.n555
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[39] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[39]
  --> D IXC_GFIFO.HOLDTOP.n554
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[3] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[3]
  --> D IXC_GFIFO.HOLDTOP.n590
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[40] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[40]
  --> D IXC_GFIFO.HOLDTOP.n553
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[41] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[41]
  --> D IXC_GFIFO.HOLDTOP.n552
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[42] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[42]
  --> D IXC_GFIFO.HOLDTOP.n551
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[43] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[43]
  --> D IXC_GFIFO.HOLDTOP.n550
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[44] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[44]
  --> D IXC_GFIFO.HOLDTOP.n549
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[45] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[45]
  --> D IXC_GFIFO.HOLDTOP.n548
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[46] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[46]
  --> D IXC_GFIFO.HOLDTOP.n547
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[47] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[47]
  --> D IXC_GFIFO.HOLDTOP.n546
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[48] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[48]
  --> D IXC_GFIFO.HOLDTOP.n545
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[49] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[49]
  --> D IXC_GFIFO.HOLDTOP.n544
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[4] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[4]
  --> D IXC_GFIFO.HOLDTOP.n589
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[50] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[50]
  --> D IXC_GFIFO.HOLDTOP.n543
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[51] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[51]
  --> D IXC_GFIFO.HOLDTOP.n542
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[52] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[52]
  --> D IXC_GFIFO.HOLDTOP.n541
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[53] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[53]
  --> D IXC_GFIFO.HOLDTOP.n540
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[54] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[54]
  --> D IXC_GFIFO.HOLDTOP.n539
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[55] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[55]
  --> D IXC_GFIFO.HOLDTOP.n538
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[56] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[56]
  --> D IXC_GFIFO.HOLDTOP.n537
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[57] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[57]
  --> D IXC_GFIFO.HOLDTOP.n536
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[58] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[58]
  --> D IXC_GFIFO.HOLDTOP.n535
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[59] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[59]
  --> D IXC_GFIFO.HOLDTOP.n534
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[5] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[5]
  --> D IXC_GFIFO.HOLDTOP.n588
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[60] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[60]
  --> D IXC_GFIFO.HOLDTOP.n533
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[61] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[61]
  --> D IXC_GFIFO.HOLDTOP.n532
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[62] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[62]
  --> D IXC_GFIFO.HOLDTOP.n531
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[63] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[63]
  --> D IXC_GFIFO.HOLDTOP.n530
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[64] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[64]
  --> D IXC_GFIFO.HOLDTOP.n529
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[65] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[65]
  --> D IXC_GFIFO.HOLDTOP.n528
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[66] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[66]
  --> D IXC_GFIFO.HOLDTOP.n527
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[67] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[67]
  --> D IXC_GFIFO.HOLDTOP.n526
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[68] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[68]
  --> D IXC_GFIFO.HOLDTOP.n525
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[69] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[69]
  --> D IXC_GFIFO.HOLDTOP.n524
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[6] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[6]
  --> D IXC_GFIFO.HOLDTOP.n587
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[70] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[70]
  --> D IXC_GFIFO.HOLDTOP.n523
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[71] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[71]
  --> D IXC_GFIFO.HOLDTOP.n522
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[72] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[72]
  --> D IXC_GFIFO.HOLDTOP.n521
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[73] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[73]
  --> D IXC_GFIFO.HOLDTOP.n520
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[74] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[74]
  --> D IXC_GFIFO.HOLDTOP.n519
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[75] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[75]
  --> D IXC_GFIFO.HOLDTOP.n518
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[76] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[76]
  --> D IXC_GFIFO.HOLDTOP.n517
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[77] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[77]
  --> D IXC_GFIFO.HOLDTOP.n516
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[78] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[78]
  --> D IXC_GFIFO.HOLDTOP.n515
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[79] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[79]
  --> D IXC_GFIFO.HOLDTOP.n514
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[7] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[7]
  --> D IXC_GFIFO.HOLDTOP.n586
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[80] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[80]
  --> D IXC_GFIFO.HOLDTOP.n513
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[81] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[81]
  --> D IXC_GFIFO.HOLDTOP.n512
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[82] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[82]
  --> D IXC_GFIFO.HOLDTOP.n511
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[83] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[83]
  --> D IXC_GFIFO.HOLDTOP.n510
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[84] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[84]
  --> D IXC_GFIFO.HOLDTOP.n509
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[85] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[85]
  --> D IXC_GFIFO.HOLDTOP.n508
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[86] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[86]
  --> D IXC_GFIFO.HOLDTOP.n507
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[87] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[87]
  --> D IXC_GFIFO.HOLDTOP.n506
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[88] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[88]
  --> D IXC_GFIFO.HOLDTOP.n505
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[89] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[89]
  --> D IXC_GFIFO.HOLDTOP.n504
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[8] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[8]
  --> D IXC_GFIFO.HOLDTOP.n585
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[90] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[90]
  --> D IXC_GFIFO.HOLDTOP.n503
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[91] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[91]
  --> D IXC_GFIFO.HOLDTOP.n502
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[92] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[92]
  --> D IXC_GFIFO.HOLDTOP.n501
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[93] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[93]
  --> D IXC_GFIFO.HOLDTOP.n500
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[94] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[94]
  --> D IXC_GFIFO.HOLDTOP.n499
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[95] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[95]
  --> D IXC_GFIFO.HOLDTOP.n498
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[96] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[96]
  --> D IXC_GFIFO.HOLDTOP.n497
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[97] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[97]
  --> D IXC_GFIFO.HOLDTOP.n496
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[98] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[98]
  --> D IXC_GFIFO.HOLDTOP.n495
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[99] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[99]
  --> D IXC_GFIFO.HOLDTOP.n494
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) IXC_GFIFO.HOLDTOP.\ctrlR_REG[9] .U01 (ixcEcmHold)
  <-- Q IXC_GFIFO.HOLDTOP.ctrlR[9]
  --> D IXC_GFIFO.HOLDTOP.n584
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut._zzixc_tfport_0_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut._zzixc_tfport_0_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut._zzixc_tfport_0_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip0_key_tlv_rsm .u_cr_tlvp2_rsm.u_cr_fifo_wrap2_tob.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip0_key_tlv_rsm .u_cr_tlvp2_rsm.u_cr_fifo_wrap2_tob.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip0_key_tlv_rsm .u_cr_tlvp2_rsm.u_cr_fifo_wrap2_tob.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop_fifo .ram_fifo.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.txc_axi_intf .u_cr_fifo_wrap2.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso_REG.U01 (ixc_uclk_sample)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.txc_axi_intf .u_cr_fifo_wrap2.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .si._zzso
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.txc_axi_intf .u_cr_fifo_wrap2.\ram_fifo.u_nx_fifo_ram_1r1w .fifo_ctrl._zzixc_tfport_1_0.\genblk1.osfevcap .pvecEv
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[9] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[9]
  --> D ixc_time.n154
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[8] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[8]
  --> D ixc_time.n153
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[7] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[7]
  --> D ixc_time.n152
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[6] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[6]
  --> D ixc_time.n151
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[63] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[63]
  --> D ixc_time.n208
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[62] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[62]
  --> D ixc_time.n207
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[61] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[61]
  --> D ixc_time.n206
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[60] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[60]
  --> D ixc_time.n205
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[5] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[5]
  --> D ixc_time.n150
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[59] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[59]
  --> D ixc_time.n204
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[58] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[58]
  --> D ixc_time.n203
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[57] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[57]
  --> D ixc_time.n202
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[56] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[56]
  --> D ixc_time.n201
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[55] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[55]
  --> D ixc_time.n200
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[54] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[54]
  --> D ixc_time.n199
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[53] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[53]
  --> D ixc_time.n198
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[52] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[52]
  --> D ixc_time.n197
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[51] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[51]
  --> D ixc_time.n196
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[50] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[50]
  --> D ixc_time.n195
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[4] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[4]
  --> D ixc_time.n149
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[49] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[49]
  --> D ixc_time.n194
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[48] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[48]
  --> D ixc_time.n193
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[47] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[47]
  --> D ixc_time.n192
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[46] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[46]
  --> D ixc_time.n191
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[45] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[45]
  --> D ixc_time.n190
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[44] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[44]
  --> D ixc_time.n189
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[43] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[43]
  --> D ixc_time.n188
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[42] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[42]
  --> D ixc_time.n187
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[41] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[41]
  --> D ixc_time.n186
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[40] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[40]
  --> D ixc_time.n185
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[3] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[3]
  --> D ixc_time.n148
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[39] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[39]
  --> D ixc_time.n184
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[38] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[38]
  --> D ixc_time.n183
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[37] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[37]
  --> D ixc_time.n182
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[36] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[36]
  --> D ixc_time.n181
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[35] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[35]
  --> D ixc_time.n180
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[34] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[34]
  --> D ixc_time.n179
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[33] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[33]
  --> D ixc_time.n178
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[32] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[32]
  --> D ixc_time.n177
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[31] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[31]
  --> D ixc_time.n176
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[30] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[30]
  --> D ixc_time.n175
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[2] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[2]
  --> D ixc_time.n147
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[29] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[29]
  --> D ixc_time.n174
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[28] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[28]
  --> D ixc_time.n173
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[27] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[27]
  --> D ixc_time.n172
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[26] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[26]
  --> D ixc_time.n171
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[25] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[25]
  --> D ixc_time.n170
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[24] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[24]
  --> D ixc_time.n169
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[23] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[23]
  --> D ixc_time.n168
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[22] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[22]
  --> D ixc_time.n167
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[21] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[21]
  --> D ixc_time.n166
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[20] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[20]
  --> D ixc_time.n165
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[1] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[1]
  --> D ixc_time.n146
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[19] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[19]
  --> D ixc_time.n164
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[18] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[18]
  --> D ixc_time.n163
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[17] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[17]
  --> D ixc_time.n162
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[16] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[16]
  --> D ixc_time.n161
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[15] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[15]
  --> D ixc_time.n160
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[14] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[14]
  --> D ixc_time.n159
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[13] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[13]
  --> D ixc_time.n158
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[12] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[12]
  --> D ixc_time.n157
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[11] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[11]
  --> D ixc_time.n156
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[10] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[10]
  --> D ixc_time.n155
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_1_REG[0] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_1[0]
  --> D ixc_time.n145
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[9] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[9]
  --> D ixc_time.n90
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[8] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[8]
  --> D ixc_time.n89
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[7] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[7]
  --> D ixc_time.n88
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[6] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[6]
  --> D ixc_time.n87
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[63] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[63]
  --> D ixc_time.n144
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[62] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[62]
  --> D ixc_time.n143
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[61] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[61]
  --> D ixc_time.n142
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[60] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[60]
  --> D ixc_time.n141
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[5] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[5]
  --> D ixc_time.n86
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[59] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[59]
  --> D ixc_time.n140
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[58] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[58]
  --> D ixc_time.n139
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[57] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[57]
  --> D ixc_time.n138
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[56] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[56]
  --> D ixc_time.n137
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[55] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[55]
  --> D ixc_time.n136
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[54] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[54]
  --> D ixc_time.n135
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[53] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[53]
  --> D ixc_time.n134
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[52] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[52]
  --> D ixc_time.n133
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[51] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[51]
  --> D ixc_time.n132
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[50] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[50]
  --> D ixc_time.n131
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[4] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[4]
  --> D ixc_time.n85
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[49] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[49]
  --> D ixc_time.n130
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[48] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[48]
  --> D ixc_time.n129
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[47] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[47]
  --> D ixc_time.n128
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[46] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[46]
  --> D ixc_time.n127
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[45] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[45]
  --> D ixc_time.n126
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[44] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[44]
  --> D ixc_time.n125
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[43] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[43]
  --> D ixc_time.n124
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[42] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[42]
  --> D ixc_time.n123
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[41] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[41]
  --> D ixc_time.n122
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[40] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[40]
  --> D ixc_time.n121
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[3] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[3]
  --> D ixc_time.n84
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[39] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[39]
  --> D ixc_time.n120
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[38] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[38]
  --> D ixc_time.n119
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[37] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[37]
  --> D ixc_time.n118
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[36] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[36]
  --> D ixc_time.n117
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[35] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[35]
  --> D ixc_time.n116
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[34] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[34]
  --> D ixc_time.n115
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[33] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[33]
  --> D ixc_time.n114
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[32] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[32]
  --> D ixc_time.n113
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[31] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[31]
  --> D ixc_time.n112
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[30] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[30]
  --> D ixc_time.n111
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[2] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[2]
  --> D ixc_time.n83
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[29] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[29]
  --> D ixc_time.n110
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[28] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[28]
  --> D ixc_time.n109
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[27] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[27]
  --> D ixc_time.n108
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[26] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[26]
  --> D ixc_time.n107
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[25] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[25]
  --> D ixc_time.n106
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[24] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[24]
  --> D ixc_time.n105
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[23] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[23]
  --> D ixc_time.n104
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[22] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[22]
  --> D ixc_time.n103
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[21] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[21]
  --> D ixc_time.n102
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[20] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[20]
  --> D ixc_time.n101
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[1] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[1]
  --> D ixc_time.n82
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[19] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[19]
  --> D ixc_time.n100
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[18] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[18]
  --> D ixc_time.n99
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[17] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[17]
  --> D ixc_time.n98
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[16] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[16]
  --> D ixc_time.n97
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[15] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[15]
  --> D ixc_time.n96
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[14] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[14]
  --> D ixc_time.n95
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[13] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[13]
  --> D ixc_time.n94
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[12] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[12]
  --> D ixc_time.n93
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[11] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[11]
  --> D ixc_time.n92
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[10] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[10]
  --> D ixc_time.n91
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP0) ixc_time.\xc_top.mioPIW_0_REG[0] .U01 (ixc_time)
  <-- Q xc_top.mioPIW_0[0]
  --> D ixc_time.n81
  --> CK xc_top.uClk
  --> CE 
  --> R 
  --> S 
---
ALWAYS_ON clock 'xc_top.uClk' controls 482 ALWAYS_ON and 942 normal flip-flops.
========
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[9] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[9]
  --> D tb_top.kme_tb_dut.n5472
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[8] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[8]
  --> D tb_top.kme_tb_dut.n5470
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[7] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[7]
  --> D tb_top.kme_tb_dut.n5468
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[6] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[6]
  --> D tb_top.kme_tb_dut.n5466
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[5] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[5]
  --> D tb_top.kme_tb_dut.n5464
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[4] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[4]
  --> D tb_top.kme_tb_dut.n5462
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[3] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[3]
  --> D tb_top.kme_tb_dut.n5460
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[31] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[31]
  --> D xc_top.bpHalt
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut._zzM2L328_pbcMevClk4.bEvWait
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[30] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[30]
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_4_0.smUNNAMED_699100
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5934
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[2] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[2]
  --> D tb_top.kme_tb_dut.n5458
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[29] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[29]
  --> D tb_top.kme_tb_dut.n5512
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[28] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[28]
  --> D tb_top.kme_tb_dut.n5510
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[27] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[27]
  --> D tb_top.kme_tb_dut.n5508
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[26] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[26]
  --> D tb_top.kme_tb_dut.n5506
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[25] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[25]
  --> D tb_top.kme_tb_dut.n5504
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[24] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[24]
  --> D tb_top.kme_tb_dut.n5502
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[23] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[23]
  --> D tb_top.kme_tb_dut.n5500
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[22] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[22]
  --> D tb_top.kme_tb_dut.n5498
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[21] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[21]
  --> D tb_top.kme_tb_dut.n5496
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[20] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[20]
  --> D tb_top.kme_tb_dut.n5494
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[1] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[1]
  --> D tb_top.kme_tb_dut.n5456
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[19] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[19]
  --> D tb_top.kme_tb_dut.n5492
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[18] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[18]
  --> D tb_top.kme_tb_dut.n5490
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[17] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[17]
  --> D tb_top.kme_tb_dut.n5488
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[16] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[16]
  --> D tb_top.kme_tb_dut.n5486
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[15] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[15]
  --> D tb_top.kme_tb_dut.n5484
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[14] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[14]
  --> D tb_top.kme_tb_dut.n5482
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[13] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[13]
  --> D tb_top.kme_tb_dut.n5480
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[12] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[12]
  --> D tb_top.kme_tb_dut.n5478
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[11] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[11]
  --> D tb_top.kme_tb_dut.n5476
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[10] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[10]
  --> D tb_top.kme_tb_dut.n5474
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.\_zzM2_bcBehEval_REG[0] .U00 (kme_tb)
  <-- Q tb_top.kme_tb_dut._zzM2_bcBehEval[0]
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_4_0.smUNNAMED_699099
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.n5515
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[9] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[9]
  --> D tb_top.kme_tb_dut.apb_xactor.n64
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[8] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[8]
  --> D tb_top.kme_tb_dut.apb_xactor.n66
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[7] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[7]
  --> D tb_top.kme_tb_dut.apb_xactor.n68
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[6] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[6]
  --> D tb_top.kme_tb_dut.apb_xactor.n70
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[5] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[5]
  --> D tb_top.kme_tb_dut.apb_xactor.n72
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[4] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[4]
  --> D tb_top.kme_tb_dut.apb_xactor.n74
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[3] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[3]
  --> D tb_top.kme_tb_dut.apb_xactor.n76
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[31] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[31]
  --> D xc_top.bpHalt
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n22
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[30] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[30]
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_5_1.smUNNAMED_1048597
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n2
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[2] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[2]
  --> D tb_top.kme_tb_dut.apb_xactor.n78
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[29] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[29]
  --> D tb_top.kme_tb_dut.apb_xactor.n24
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[28] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[28]
  --> D tb_top.kme_tb_dut.apb_xactor.n26
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[27] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[27]
  --> D tb_top.kme_tb_dut.apb_xactor.n28
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[26] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[26]
  --> D tb_top.kme_tb_dut.apb_xactor.n30
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[25] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[25]
  --> D tb_top.kme_tb_dut.apb_xactor.n32
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[24] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[24]
  --> D tb_top.kme_tb_dut.apb_xactor.n34
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[23] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[23]
  --> D tb_top.kme_tb_dut.apb_xactor.n36
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[22] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[22]
  --> D tb_top.kme_tb_dut.apb_xactor.n38
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[21] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[21]
  --> D tb_top.kme_tb_dut.apb_xactor.n40
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[20] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[20]
  --> D tb_top.kme_tb_dut.apb_xactor.n42
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[1] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[1]
  --> D tb_top.kme_tb_dut.apb_xactor.n80
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[19] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[19]
  --> D tb_top.kme_tb_dut.apb_xactor.n44
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[18] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[18]
  --> D tb_top.kme_tb_dut.apb_xactor.n46
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[17] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[17]
  --> D tb_top.kme_tb_dut.apb_xactor.n48
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[16] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[16]
  --> D tb_top.kme_tb_dut.apb_xactor.n50
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[15] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[15]
  --> D tb_top.kme_tb_dut.apb_xactor.n52
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[14] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[14]
  --> D tb_top.kme_tb_dut.apb_xactor.n54
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[13] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[13]
  --> D tb_top.kme_tb_dut.apb_xactor.n56
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[12] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[12]
  --> D tb_top.kme_tb_dut.apb_xactor.n58
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[11] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[11]
  --> D tb_top.kme_tb_dut.apb_xactor.n60
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[10] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[10]
  --> D tb_top.kme_tb_dut.apb_xactor.n62
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.apb_xactor.\_zzM3_bcBehEval_REG[0] .U00 (apb_xactor)
  <-- Q tb_top.kme_tb_dut.apb_xactor._zzM3_bcBehEval[0]
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_5_1.smUNNAMED_1048596
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.apb_xactor.n21
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[9] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[9]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n142
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[8] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[8]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n140
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[7] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[7]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n138
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[6] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[6]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n136
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[5] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[5]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n134
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[4] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[4]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n132
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[3] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[3]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n130
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[31] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[31]
  --> D xc_top.bpHalt
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132L132_bcMevClkP0.bEvWait
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[30] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[30]
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_5_3.smUNNAMED_1747674
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n3
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[2] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[2]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n128
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[29] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[29]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n182
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[28] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[28]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n180
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[27] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[27]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n178
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[26] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[26]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n176
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[25] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[25]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n174
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[24] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[24]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n172
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[23] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[23]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n170
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[22] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[22]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n168
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[21] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[21]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n166
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[20] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[20]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n164
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[1] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[1]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n126
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[19] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[19]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n162
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[18] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[18]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n160
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[17] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[17]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n158
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[16] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[16]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n156
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[15] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[15]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n154
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[14] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[14]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n152
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[13] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[13]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n150
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[12] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[12]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n148
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[11] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[11]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n146
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[10] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[10]
  --> D tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n144
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Normal flip-flop, blocked at swap-in:
FDRSE (Q_FDP4EP) tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.\_zzM132_bcBehEval_REG[0] .U00 (nx_reg_indirect_access)
  <-- Q tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL._zzM132_bcBehEval[0]
  --> D precompile_base_node_for_MT_actions.Insert_D-input_invertors_MT_node_5_3.smUNNAMED_1747673
  --> CK xc_top.bClk
  --> CE tb_top.kme_tb_dut.kme_dut.u_cr_kme_regfile.u_SA_CTRL.n184
  --> R 
  --> S 
---
Example of ALWAYS_ON flip-flop:
FDRSE (Q_FDP0) xc_top.\bpCount_REG[9] .U01 (xc_top_1)
  <-- Q xc_top.bpCount[9]
  --> D xc_top.n3140
  --> CK xc_top.bClk
  --> CE 
  --> R 
  --> S 
---
ALWAYS_ON node: 'xc_top' (xc_top_1).
ALWAYS_ON clock 'xc_top.bClk' controls 64 ALWAYS_ON and 96 normal flip-flops.
========
Found 4 ALWAYS_ON clocks, out of which 2 partial.
elapsed time: 0 sec.
created 0 unnamed nets and 2 unnamed primitives.
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
} // Collecting ALWAYS_ON flip-flops

1X mode analysis {
Passive shadows will be optimized out.

Clear main markers (primitives) mt-16 {

Clear main markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear main markers (subaction: finish)
elapsed time: 0 sec.
} // Clear main markers (primitives) mt-16

TraverseSetEdgeWE.ForEachPrim {
elapsed time: 0 sec.
} // TraverseSetEdgeWE.ForEachPrim

TraverseConvertHDLICEedge.ForEachPrim {
elapsed time: 0 sec.
} // TraverseConvertHDLICEedge.ForEachPrim

Propagating 1X constants {
} // Propagating 1X constants

Propagating clocks {
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
elapsed time: 1 sec.
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
} // Propagating clocks

TraverseClr05X.ForEachNet {
elapsed time: 0 sec.
} // TraverseClr05X.ForEachNet

Propagating 1X constants {
} // Propagating 1X constants

Propagating clocks {
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 499 MB (PDB pools size: 720 MB).
Setting p=pos restriction at the following pin:
O2 xc_top.!COMBO.smCombo_U4565_U0 (xc_top_1)
  <-- O xc_top.n3667
 @--> I1 xc_top.ecmNotSyncD
  --> I0 IXC_GFIFO.I.I.n6874
---
Setting p=neg restriction at the following pin:
O2 xc_top.!COMBO.smCombo_U698_U0 (xc_top_1)
  <--*O xc_top.n406
 @--> I1 xc_top.GFGBfullBwD
  --> I0 xc_top.GFGBfullBw
---
Setting p=neg restriction at the following pin:
O2 xc_top.!COMBO.smCombo_U699_U0 (xc_top_1)
  <--*O xc_top.n404
 @--> I1 xc_top.GFLBfullD
  --> I0 xc_top.GFLBfull
---
Setting p=neg restriction at the following pin:
O2 xc_top.!COMBO.smCombo_U706_U0 (xc_top_1)
  <--*O xc_top.n407
 @--> I1 xc_top.holdEcmD
  --> I0 xc_top.holdEcm
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut.apb_xactor._zzM3L94_mdxP1_OnP.!COMBO.smCombo_U1_U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L94_mdxP1_On
  --> I1 tb_top.kme_tb_dut.apb_xactor._zzM3L94_mdxP1_En
 @--> I0 tb_top.kme_tb_dut.apb_xactor._zzM3L94_mdxP1_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut.apb_xactor._zzM3L94_bcP1_DOnP.!COMBO.smCombo_U1_U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L94_bcP1_DOn
  --> I1 tb_top.kme_tb_dut.apb_xactor._zzM3L94_bcP1_DOnP.enL[0]
 @--> I0 tb_top.kme_tb_dut.apb_xactor._zzM3L94_bcP1_DOnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut.apb_xactor._zzM3L61_mdxP2_OnP.!COMBO.smCombo_U1_U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L61_mdxP2_On
  --> I1 tb_top.kme_tb_dut.apb_xactor._zzM3L61_mdxP2_En
 @--> I0 tb_top.kme_tb_dut.apb_xactor._zzM3L61_mdxP2_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut.apb_xactor._zzM3L61_bcP2_DOnP.!COMBO.smCombo_U1_U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L61_bcP2_DOn
  --> I1 tb_top.kme_tb_dut.apb_xactor._zzM3L61_bcP2_DOnP.enL[0]
 @--> I0 tb_top.kme_tb_dut.apb_xactor._zzM3L61_bcP2_DOnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut.apb_xactor._zzM3L46_mdxP0_OnP.!COMBO.smCombo_U1_U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L46_mdxP0_On
  --> I1 tb_top.kme_tb_dut.apb_xactor._zzM3L46_mdxP0_En
 @--> I0 tb_top.kme_tb_dut.apb_xactor._zzM3L46_mdxP0_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOnP.!COMBO.smCombo_U1_U0 (apb_xactor)
  <-- O tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOn
  --> I1 tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOnP.enL[0]
 @--> I0 tb_top.kme_tb_dut.apb_xactor._zzM3L46_bcP0_DOnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut._zzM2L560_mdxP4_OnP.!COMBO.smCombo_U1_U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L560_mdxP4_On
  --> I1 tb_top.kme_tb_dut._zzM2L560_mdxP4_En
 @--> I0 tb_top.kme_tb_dut._zzM2L560_mdxP4_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut._zzM2L420_mdxP3_OnP.!COMBO.smCombo_U1_U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L420_mdxP3_On
  --> I1 tb_top.kme_tb_dut._zzM2L420_mdxP3_En
 @--> I0 tb_top.kme_tb_dut._zzM2L420_mdxP3_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut._zzM2L328_mdxP2_OnP.!COMBO.smCombo_U1_U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L328_mdxP2_On
  --> I1 tb_top.kme_tb_dut._zzM2L328_mdxP2_En
 @--> I0 tb_top.kme_tb_dut._zzM2L328_mdxP2_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut._zzM2L309_mdxP0_OnP.!COMBO.smCombo_U1_U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L309_mdxP0_On
  --> I1 tb_top.kme_tb_dut._zzM2L309_mdxP0_En
 @--> I0 tb_top.kme_tb_dut._zzM2L309_mdxP0_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
XO2 tb_top.kme_tb_dut._zzM2L253_mdxP5_OnP.!COMBO.smCombo_U1_U0 (kme_tb)
  <-- O tb_top.kme_tb_dut._zzM2L253_mdxP5_On
  --> I1 tb_top.kme_tb_dut._zzM2L253_mdxP5_En
 @--> I0 tb_top.kme_tb_dut._zzM2L253_mdxP5_OnP.enD[0]
---
Setting p=pos restriction at the following pin:
O2 IXC_GFIFO.O.O.!COMBO.smCombo_U8822_U0 (IXC_SV_GFIFO_VXE_256)
  <-- O IXC_GFIFO.O.O.n1612
 @--> I1 IXC_GFIFO.O.O.svGFbusy2
  --> I0 IXC_GFIFO.O.O.svGFbusy1
---
Setting p=pos restriction at the following pin:
A2 IXC_GFIFO.ISF.!COMBO.smCombo_U121_U0 (IXC_ISF)
  <--*O IXC_GFIFO.ISF.n51
 @-->*I1 IXC_GFIFO.ISF.isfBusyD
  -->*I0 IXC_GFIFO.ISF.isfBusy
---
Setting p=pos restriction at the following pin:
XO2 IXC_GFIFO.HOLDTOP.!COMBO.smCombo_U1138_U0 (ixcEcmHold)
  <-- O IXC_GFIFO.HOLDTOP.n1194
 @--> I1 IXC_GFIFO.HOLDTOP.ctrlEvP[0]
  --> I0 IXC_GFIFO.HOLDTOP.ctrlR[136]
---
Setting p=pos restriction at the following pin:
XO2 IXC_GFIFO.HOLDTOP.!COMBO.smCombo_U1139_U0 (ixcEcmHold)
  <-- O IXC_GFIFO.HOLDTOP.n1193
 @--> I1 IXC_GFIFO.HOLDTOP.ctrlEvP[1]
  --> I0 IXC_GFIFO.HOLDTOP.ctrlR[192]
---
Setting p=pos restriction at the following pin:
XO2 IXC_GFIFO.DUMMY.!COMBO.smCombo_U585_U0 (ixcEcmHoldOtb)
  <-- O IXC_GFIFO.DUMMY.newCtrl
 @--> I1 IXC_GFIFO.DUMMY.ctrlEvP
  --> I0 IXC_GFIFO.DUMMY.ctrlR[136]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4549_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199391
  --> I1 ixc_time.nextDutTime[9]
 @-->*I0 xc_top.nextDutTimeP[9]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4549_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199389
 @--> I1 xc_top.nextDutTimeP[9]
  --> I0 ixc_time.nextDutTime[9]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4548_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199387
  --> I1 ixc_time.nextDutTime[8]
 @-->*I0 xc_top.nextDutTimeP[8]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4548_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199385
 @--> I1 xc_top.nextDutTimeP[8]
  --> I0 ixc_time.nextDutTime[8]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4548_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199384
  --> I1 ixc_time.nextDutTime[7]
 @-->*I0 xc_top.nextDutTimeP[7]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4548_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199382
 @--> I1 xc_top.nextDutTimeP[7]
  --> I0 ixc_time.nextDutTime[7]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4547_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199380
  --> I1 ixc_time.nextDutTime[6]
 @-->*I0 xc_top.nextDutTimeP[6]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4547_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199378
 @--> I1 xc_top.nextDutTimeP[6]
  --> I0 ixc_time.nextDutTime[6]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4547_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199377
  --> I1 ixc_time.nextDutTime[5]
 @-->*I0 xc_top.nextDutTimeP[5]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4547_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199375
 @--> I1 xc_top.nextDutTimeP[5]
  --> I0 ixc_time.nextDutTime[5]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4546_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199373
  --> I1 ixc_time.nextDutTime[4]
 @-->*I0 xc_top.nextDutTimeP[4]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4546_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199371
 @--> I1 xc_top.nextDutTimeP[4]
  --> I0 ixc_time.nextDutTime[4]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4546_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199370
  --> I1 ixc_time.nextDutTime[3]
 @-->*I0 xc_top.nextDutTimeP[3]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4546_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199368
 @--> I1 xc_top.nextDutTimeP[3]
  --> I0 ixc_time.nextDutTime[3]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4559_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199464
  --> I1 ixc_time.nextDutTime[30]
 @-->*I0 xc_top.nextDutTimeP[30]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4559_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199462
 @--> I1 xc_top.nextDutTimeP[30]
  --> I0 ixc_time.nextDutTime[30]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4545_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199366
  --> I1 ixc_time.nextDutTime[2]
 @-->*I0 xc_top.nextDutTimeP[2]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4545_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199364
 @--> I1 xc_top.nextDutTimeP[2]
  --> I0 ixc_time.nextDutTime[2]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4559_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199461
  --> I1 ixc_time.nextDutTime[29]
 @-->*I0 xc_top.nextDutTimeP[29]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4559_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199459
 @--> I1 xc_top.nextDutTimeP[29]
  --> I0 ixc_time.nextDutTime[29]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4558_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199457
  --> I1 ixc_time.nextDutTime[28]
 @-->*I0 xc_top.nextDutTimeP[28]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4558_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199455
 @--> I1 xc_top.nextDutTimeP[28]
  --> I0 ixc_time.nextDutTime[28]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4558_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199454
  --> I1 ixc_time.nextDutTime[27]
 @-->*I0 xc_top.nextDutTimeP[27]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4558_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199452
 @--> I1 xc_top.nextDutTimeP[27]
  --> I0 ixc_time.nextDutTime[27]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4557_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199450
  --> I1 ixc_time.nextDutTime[26]
 @-->*I0 xc_top.nextDutTimeP[26]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4557_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199448
 @--> I1 xc_top.nextDutTimeP[26]
  --> I0 ixc_time.nextDutTime[26]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4557_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199447
  --> I1 ixc_time.nextDutTime[25]
 @-->*I0 xc_top.nextDutTimeP[25]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4557_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199445
 @--> I1 xc_top.nextDutTimeP[25]
  --> I0 ixc_time.nextDutTime[25]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4556_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199443
  --> I1 ixc_time.nextDutTime[24]
 @-->*I0 xc_top.nextDutTimeP[24]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4556_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199441
 @--> I1 xc_top.nextDutTimeP[24]
  --> I0 ixc_time.nextDutTime[24]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4556_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199440
  --> I1 ixc_time.nextDutTime[23]
 @-->*I0 xc_top.nextDutTimeP[23]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4556_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199438
 @--> I1 xc_top.nextDutTimeP[23]
  --> I0 ixc_time.nextDutTime[23]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4555_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199436
  --> I1 ixc_time.nextDutTime[22]
 @-->*I0 xc_top.nextDutTimeP[22]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4555_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199434
 @--> I1 xc_top.nextDutTimeP[22]
  --> I0 ixc_time.nextDutTime[22]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4555_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199433
  --> I1 ixc_time.nextDutTime[21]
 @-->*I0 xc_top.nextDutTimeP[21]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4555_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199431
 @--> I1 xc_top.nextDutTimeP[21]
  --> I0 ixc_time.nextDutTime[21]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4554_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199429
  --> I1 ixc_time.nextDutTime[20]
 @-->*I0 xc_top.nextDutTimeP[20]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4554_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199427
 @--> I1 xc_top.nextDutTimeP[20]
  --> I0 ixc_time.nextDutTime[20]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4545_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199363
  --> I1 ixc_time.nextDutTime[1]
 @-->*I0 xc_top.nextDutTimeP[1]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4545_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199361
 @--> I1 xc_top.nextDutTimeP[1]
  --> I0 ixc_time.nextDutTime[1]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4554_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199426
  --> I1 ixc_time.nextDutTime[19]
 @-->*I0 xc_top.nextDutTimeP[19]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4554_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199424
 @--> I1 xc_top.nextDutTimeP[19]
  --> I0 ixc_time.nextDutTime[19]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4553_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199422
  --> I1 ixc_time.nextDutTime[18]
 @-->*I0 xc_top.nextDutTimeP[18]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4553_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199420
 @--> I1 xc_top.nextDutTimeP[18]
  --> I0 ixc_time.nextDutTime[18]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4553_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199419
  --> I1 ixc_time.nextDutTime[17]
 @-->*I0 xc_top.nextDutTimeP[17]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4553_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199417
 @--> I1 xc_top.nextDutTimeP[17]
  --> I0 ixc_time.nextDutTime[17]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4552_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199415
  --> I1 ixc_time.nextDutTime[16]
 @-->*I0 xc_top.nextDutTimeP[16]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4552_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199413
 @--> I1 xc_top.nextDutTimeP[16]
  --> I0 ixc_time.nextDutTime[16]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4552_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199412
  --> I1 ixc_time.nextDutTime[15]
 @-->*I0 xc_top.nextDutTimeP[15]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4552_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199410
 @--> I1 xc_top.nextDutTimeP[15]
  --> I0 ixc_time.nextDutTime[15]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4551_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199408
  --> I1 ixc_time.nextDutTime[14]
 @-->*I0 xc_top.nextDutTimeP[14]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4551_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199406
 @--> I1 xc_top.nextDutTimeP[14]
  --> I0 ixc_time.nextDutTime[14]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4551_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199405
  --> I1 ixc_time.nextDutTime[13]
 @-->*I0 xc_top.nextDutTimeP[13]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4551_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199403
 @--> I1 xc_top.nextDutTimeP[13]
  --> I0 ixc_time.nextDutTime[13]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4550_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199401
  --> I1 ixc_time.nextDutTime[12]
 @-->*I0 xc_top.nextDutTimeP[12]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4550_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199399
 @--> I1 xc_top.nextDutTimeP[12]
  --> I0 ixc_time.nextDutTime[12]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4550_U2 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199398
  --> I1 ixc_time.nextDutTime[11]
 @-->*I0 xc_top.nextDutTimeP[11]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4550_U4 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199396
 @--> I1 xc_top.nextDutTimeP[11]
  --> I0 ixc_time.nextDutTime[11]
---
Setting p=pos restriction at the following pin:
A2 xc_top.!COMBO.smCombo_U4549_U12 (xc_top_1)
  <-- O xc_top.!COMBO.smUNNAMED_199394
  --> I1 ixc_time.nextDutTime[10]
 @-->*I0 xc_top.nextDutTimeP[10]
---
Setting p=neg restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4549_U14 (xc_top_1)
  <--*O xc_top.!COMBO.smUNNAMED_199392
 @--> I1 xc_top.nextDutTimeP[10]
  --> I0 ixc_time.nextDutTime[10]
---
Setting p=pos restriction at the following pin:
XO2 xc_top.!COMBO.smCombo_U4543_U0 (xc_top_1)
  <-- O xc_top.mcDelta[0]
 @--> I1 xc_top.nextDutTimeP[0]
  --> I0 ixc_time.nextDutTime[0]
---
Setting p=neg restriction at the following pin:
O2 xc_top.!COMBO.smCombo_U4544_U0 (xc_top_1)
  <-- O xc_top.n3684
 @-->*I1 xc_top.nextDutTimeP[0]
  --> I0 ixc_time.nextDutTime[0]
---
elapsed time: 0 sec.
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).
} // Propagating clocks

TraverseBlockedLatches.ForEachPrim {
elapsed time: 0 sec.
} // TraverseBlockedLatches.ForEachPrim

Propagating data {
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).

TraverseLatchPaths.ForEachPrim {
elapsed time: 0 sec.
} // TraverseLatchPaths.ForEachPrim
elapsed time: 0 sec.
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).
} // Propagating data

TraverseClrPrimConst.ForEachNet {
elapsed time: 0 sec.
} // TraverseClrPrimConst.ForEachNet

Propagating 1X constants {
} // Propagating 1X constants

TraverseMarkLPulses1X.ForEachPrim {
elapsed time: 0 sec.
} // TraverseMarkLPulses1X.ForEachPrim
Processed 0 deposit edge detectors.
elapsed time: 1 sec.
} // 1X mode analysis

Delete data (nets) mt-16 {

Delete data (subaction: finish) {
elapsed time: 0 sec.
} // Delete data (subaction: finish)
elapsed time: 0 sec.
} // Delete data (nets) mt-16

Breaking feedback loops {

TraverseConvertTriRegLatches.ForEachPrimSafe {
flat nets = 218432, primitives = 214888, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).
elapsed time: 0 sec.
created 1024 unnamed nets and 2048 unnamed primitives.
flat nets = 219456, primitives = 216936, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).
} // TraverseConvertTriRegLatches.ForEachPrimSafe
REPORT (legacy-38385): Total number of IXCOM and CAKE clocks: 8.

Clocks with zero frequency {
tb_top.kme_tb_dut.my_clk
my_clks.ixcg_0._zy_simnet_clk_0_w$
xc_top.clockMC
my_clks.ixcg_0.clk
tb_top.kme_tb_dut.my_clk
xc_top.clockMC
} // Clocks with zero frequency
REPORT (legacy-44524): Clock sources cone: 92 nets.

Clear logical markers {

TraverseClearHierMarkers.ForEachCell {
elapsed time: 0 sec.
} // TraverseClearHierMarkers.ForEachCell
elapsed time: 0 sec.
} // Clear logical markers

Duplicating and breaking combinational feedback loops {
flat nets = 219456, primitives = 216936, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).

Clear secondary markers (nets) mt-16 {

Clear secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers (nets) mt-16

SearchTarjan.ForEachNet {
elapsed time: 0 sec.
} // SearchTarjan.ForEachNet

Clear high markers (nets) mt-16 {

Clear high markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear high markers (subaction: finish)
elapsed time: 0 sec.
} // Clear high markers (nets) mt-16
*** start SCC log ***
*** end SCC log ***
elapsed time: 0 sec.
flat nets = 219456, primitives = 216936, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).
} // Duplicating and breaking combinational feedback loops

Breaking clock feedback loops {

Clear secondary markers (nets) mt-16 {

Clear secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers (nets) mt-16

Marking pins for clock loops (primitives) mt-16 {

Marking pins for clock loops (subaction: finish) {
elapsed time: 0 sec.
} // Marking pins for clock loops (subaction: finish)
elapsed time: 0 sec.
} // Marking pins for clock loops (primitives) mt-16

SearchTarjan.ForEachNet {
elapsed time: 0 sec.
} // SearchTarjan.ForEachNet

Clear high markers (nets) mt-16 {

Clear high markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear high markers (subaction: finish)
elapsed time: 0 sec.
} // Clear high markers (nets) mt-16
*** start SCC log ***
*** end SCC log ***
elapsed time: 0 sec.
} // Breaking clock feedback loops

Breaking data feedback loops {

Clear secondary markers (nets) mt-16 {

Clear secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers (nets) mt-16

Marking pins for data loops (primitives) mt-16 {

Marking pins for data loops (subaction: finish) {
elapsed time: 0 sec.
} // Marking pins for data loops (subaction: finish)
elapsed time: 0 sec.
} // Marking pins for data loops (primitives) mt-16

SearchTarjan.ForEachNet {
elapsed time: 0 sec.
} // SearchTarjan.ForEachNet

Clear high markers (nets) mt-16 {

Clear high markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear high markers (subaction: finish)
elapsed time: 0 sec.
} // Clear high markers (nets) mt-16
*** start SCC log ***
*** end SCC log ***
elapsed time: 0 sec.
} // Breaking data feedback loops

Breaking set/reset feedback loops {

Clear secondary markers (nets) mt-16 {

Clear secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers (nets) mt-16

Marking pins for set/reset loops (primitives) mt-16 {

Marking pins for set/reset loops (subaction: finish) {
elapsed time: 0 sec.
} // Marking pins for set/reset loops (subaction: finish)
elapsed time: 0 sec.
} // Marking pins for set/reset loops (primitives) mt-16

SearchTarjan.ForEachNet {
elapsed time: 0 sec.
} // SearchTarjan.ForEachNet

Clear high markers (nets) mt-16 {

Clear high markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear high markers (subaction: finish)
elapsed time: 0 sec.
} // Clear high markers (nets) mt-16
*** start SCC log ***
*** end SCC log ***
elapsed time: 0 sec.
} // Breaking set/reset feedback loops
DuplicateSCC was called 0 times, elapsed time: 0 sec.
DumpSCC was called 0 times, elapsed time: 0 sec.
HasLoop(<pin>) was called 0 times, elapsed time: 0 sec.
HasLoop(<range>) was called 0 times, elapsed time: 0 sec.
Total number of breaks (additional state devices): 0.
elapsed time: 0 sec.
} // Breaking feedback loops

Synthesizing registers {
flat nets = 219456, primitives = 216936, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).
INFO (multclk-1137): Design will be emulated in fast mode.
Converted 3082 pulse-driven flip-flops to latches.

Optimizing shadows {

Clear secondary markers by mask (nets) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (nets) mt-16

TraverseOptimizeShadowMPR.ForEachPrim {
elapsed time: 0 sec.
} // TraverseOptimizeShadowMPR.ForEachPrim

TraverseOptimizeShadows.ForEachPrim {
elapsed time: 0 sec.
} // TraverseOptimizeShadows.ForEachPrim
Optimized out active MPR IXC_GFIFO.I.I.U10466
Optimized out active MPR tb_top.kme_tb_dut.U9876
Optimized out active MPR tb_top.kme_tb_dut.U9878
Optimized out active MPR tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop .gcm_tag_data_fifo.std_fifo.U208
Optimized out active MPR tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop .kdf.gcm_key_fifo.std_fifo.U272
Optimized out active MPR tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_encrypt_kop .kdf.hash_key_fifo.std_fifo.U528
Optimized out active MPR tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop .gcm_tag_data_fifo.std_fifo.U208
Optimized out active MPR tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop .kdf.gcm_key_fifo.std_fifo.U272
Optimized out active MPR tb_top.kme_tb_dut.kme_dut.u_cr_kme_core.\kme_is_core.cceip_validate_kop .kdf.hash_key_fifo.std_fifo.U528

Clear secondary markers by mask (nets) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (nets) mt-16
elapsed time: 0 sec.
} // Optimizing shadows

Collect shadows statistics {

Clear secondary markers by mask (nets) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (nets) mt-16

TraverseMarkLoaded.ForEachNet {
elapsed time: 0 sec.
} // TraverseMarkLoaded.ForEachNet

Calculate shadows (nets) mt-16 {

Calculate shadows (subaction: finish) {
elapsed time: 0 sec.
} // Calculate shadows (subaction: finish)
elapsed time: 0 sec.
} // Calculate shadows (nets) mt-16

Processing shadows.request {
elapsed time: 0 sec.
} // Processing shadows.request
elapsed time: 0 sec.
} // Collect shadows statistics

TraverseBuildNets.ForEachNetSafe {
flat nets = 219456, primitives = 216936, nodes = 336439; resident memory size: 501 MB (PDB pools size: 720 MB).
elapsed time: 0 sec.
flat nets = 414663, primitives = 216936, nodes = 336439; resident memory size: 508 MB (PDB pools size: 736 MB).
} // TraverseBuildNets.ForEachNetSafe
Created 0 invertors.

Set main markers (primitives) mt-16 {

Set main markers (subaction: finish) {
elapsed time: 0 sec.
} // Set main markers (subaction: finish)
elapsed time: 0 sec.
} // Set main markers (primitives) mt-16

TraverseBuildPrims.ForEachPrimSafe {
flat nets = 414684, primitives = 216957, nodes = 336439; resident memory size: 508 MB (PDB pools size: 736 MB).
elapsed time: 1 sec.
created 146408 unnamed nets and 386305 unnamed primitives.
flat nets = 561099, primitives = 610405, nodes = 336439; resident memory size: 565 MB (PDB pools size: 784 MB).
} // TraverseBuildPrims.ForEachPrimSafe
Created 0 invertors.

Disconnect marked terminals (nets) mt-16 {

Disconnect marked terminals (subaction: finish) {
elapsed time: 0 sec.
} // Disconnect marked terminals (subaction: finish)
elapsed time: 0 sec.
} // Disconnect marked terminals (nets) mt-16
/lan/cva_rel/vxe23h1/23.03.131.s001/tools.lnx86/qtlib/qtCAKE.llib elapsed time: 0 sec.

Flattening {
flat nets = 561102, primitives = 610407, nodes = 336439; resident memory size: 566 MB (PDB pools size: 784 MB).

Flattening (nodes) mt-16 {

Flattening (subaction: finish) {
elapsed time: 0 sec.
} // Flattening (subaction: finish)
elapsed time: 0 sec.
} // Flattening (nodes) mt-16

Flattening (nets) mt-16 {

Flattening (subaction: finish) {
elapsed time: 0 sec.
} // Flattening (subaction: finish)
elapsed time: 0 sec.
} // Flattening (nets) mt-16

Delete saved prims {
flat nets = 568279, primitives = 619632, nodes = 341568; resident memory size: 568 MB (PDB pools size: 784 MB).
elapsed time: 0 sec.
flat nets = 568279, primitives = 618606, nodes = 341568; resident memory size: 568 MB (PDB pools size: 784 MB).
} // Delete saved prims
elapsed time: 0 sec.
flat nets = 568279, primitives = 618606, nodes = 341568; resident memory size: 568 MB (PDB pools size: 784 MB).
} // Flattening

Generating lps report {
elapsed time: 0 sec.
} // Generating lps report

Cleaning {
flat nets = 568282, primitives = 618609, nodes = 341568; resident memory size: 568 MB (PDB pools size: 784 MB).
Common expressions are merged.

unset UCDB keepnets (nets) mt-16 {

unset UCDB keepnets (subaction: finish) {
elapsed time: 0 sec.
} // unset UCDB keepnets (subaction: finish)
elapsed time: 0 sec.
} // unset UCDB keepnets (nets) mt-16
Clear all markers (primitives) mt-16 {
Clear all markers (subaction: finish) {
elapsed time: 0 sec; resident memory size: 568 MB.
} // Clear all markers (subaction: finish)
elapsed time: 0 sec; resident memory size: 568 MB.
} // Clear all markers (primitives) mt-16
InitNetsQueueMT {
Initialize cleaning (nets) mt-16 {
Initialize cleaning (subaction: finish) {
elapsed time: 0 sec; resident memory size: 615 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 615 MB.
} // Initialize cleaning (nets) mt-16
Initialize cleaning (primitives) mt-16 {
Initialize cleaning (subaction: finish) {
elapsed time: 0 sec; resident memory size: 615 MB.
} // Initialize cleaning (subaction: finish)
elapsed time: 0 sec; resident memory size: 615 MB.
} // Initialize cleaning (primitives) mt-16
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 441
elapsed time: 0 sec; resident memory size: 615 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 615 MB.
} // Reconnect buf/inv mt-16
elapsed time: 0 sec; resident memory size: 615 MB.
} // InitNetsQueueMT
Merge common expressions (primitives) mt-16 {
Merge common expressions (subaction: finish) {
elapsed time: 0 sec; resident memory size: 615 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 615 MB.
} // Merge common expressions (primitives) mt-16
Merge common expressions (nets) mt-16 {
Merge common expressions (subaction: finish) {
elapsed time: 0 sec; resident memory size: 904 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 3550 MB.
} // Merge common expressions (nets) mt-16
AssignConstantsAndMerge {
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 8004
elapsed time: 0 sec; resident memory size: 905 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 3551 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 905 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 3551 MB.
} // AssignConstantsAndMerge
ProcessMergeMT {
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 22439
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 4696
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
Reconnect buf/inv mt-16 {
Reconnect buf/inv (subaction: finish) {
Number of nets processed: 400
elapsed time: 0 sec; resident memory size: 905 MB.
} // Reconnect buf/inv (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // Reconnect buf/inv mt-16
CollectParentNets {
elapsed time: 0 sec; resident memory size: 905 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 905 MB.
} // AssignConstantsAndMerge
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of primitives processed: 3537
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions mt-16
Merge common expressions mt-16 {
Merge common expressions (subaction: finish) {
Number of nets processed: 2905
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // Merge common expressions mt-16
AssignConstantsAndMerge {
CollectParentNets {
elapsed time: 0 sec; resident memory size: 905 MB.
} // CollectParentNets
elapsed time: 0 sec; resident memory size: 905 MB.
} // AssignConstantsAndMerge
Number of merging steps: 3.
elapsed time: 0 sec; resident memory size: 905 MB.
} // ProcessMergeMT
MT base (disconnect) mt-16 {
MT base (subaction: finish) {
elapsed time: 0 sec; resident memory size: 905 MB.
} // MT base (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // MT base (disconnect) mt-16
Set main markers (nets) mt-16 {
Set main markers (subaction: finish) {
elapsed time: 0 sec; resident memory size: 905 MB.
} // Set main markers (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // Set main markers (nets) mt-16
MT base (detach) mt-16 {
MT base (subaction: finish) {
elapsed time: 0 sec; resident memory size: 905 MB.
} // MT base (subaction: finish)
elapsed time: 0 sec; resident memory size: 905 MB.
} // MT base (detach) mt-16

set UCDB keepnets (nets) mt-16 {

set UCDB keepnets (subaction: finish) {
elapsed time: 0 sec.
} // set UCDB keepnets (subaction: finish)
elapsed time: 0 sec.
} // set UCDB keepnets (nets) mt-16
elapsed time: 0 sec.
created 0 unnamed nets and 16 unnamed primitives.
flat nets = 496629, primitives = 482725, nodes = 341568; resident memory size: 3551 MB (PDB pools size: 784 MB).
} // Cleaning

Insert invertors (nets) mt-16 {

Insert invertors (subaction: close pools) {
flat nets = 496645, primitives = 482725, nodes = 341584; resident memory size: 919 MB (PDB pools size: 944 MB).
elapsed time: 0 sec.
flat nets = 496879, primitives = 482959, nodes = 341584; resident memory size: 976 MB (PDB pools size: 944 MB).
} // Insert invertors (subaction: close pools)

Insert invertors (subaction: finish) {
flat nets = 496879, primitives = 482959, nodes = 341584; resident memory size: 976 MB (PDB pools size: 944 MB).
elapsed time: 0 sec.
flat nets = 496879, primitives = 483042, nodes = 341584; resident memory size: 976 MB (PDB pools size: 944 MB).
} // Insert invertors (subaction: finish)
elapsed time: 0 sec.
flat nets = 496879, primitives = 483042, nodes = 341584; resident memory size: 976 MB (PDB pools size: 944 MB).
} // Insert invertors (nets) mt-16

TraverseCollectShadows.ForEachNet {
flat nets = 496879, primitives = 483042, nodes = 341584; resident memory size: 976 MB (PDB pools size: 944 MB).
elapsed time: 0 sec.
flat nets = 496880, primitives = 483074, nodes = 341584; resident memory size: 976 MB (PDB pools size: 944 MB).
} // TraverseCollectShadows.ForEachNet
Shadows statistics: 4 in clock cones, 113313 in data cones, 22405 in mixed clock/data cones, 5235 ECM and 28955 instrumentation nets.

Presorting nets {
flat nets = 496880, primitives = 483074, nodes = 341584; resident memory size: 976 MB (PDB pools size: 944 MB).
elapsed time: 0 sec.
flat nets = 496880, primitives = 483074, nodes = 341584; resident memory size: 996 MB (PDB pools size: 992 MB).
} // Presorting nets

Collecting internal probes {
flat nets = 496880, primitives = 483074, nodes = 341584; resident memory size: 996 MB (PDB pools size: 992 MB).
Marked 0 internal probes.
elapsed time: 0 sec.
flat nets = 496880, primitives = 483074, nodes = 341584; resident memory size: 996 MB (PDB pools size: 992 MB).
} // Collecting internal probes
Info : Have 0 misses when searching nodes/nets in the presorted container.
elapsed time: 1 sec.
created 146415 unnamed nets and 386447 unnamed primitives.
flat nets = 496880, primitives = 483074, nodes = 341584; resident memory size: 3699 MB (PDB pools size: 944 MB).
} // Synthesizing registers

Setting keepnets and probes {
flat nets = 496880, primitives = 483074, nodes = 341584; resident memory size: 996 MB (PDB pools size: 944 MB).

FV instrumentation {
flat nets = 496893, primitives = 483083, nodes = 341584; resident memory size: 996 MB (PDB pools size: 944 MB).
Connected IXCOM cycle counter bus xc_top._ET3_COMPILER_RESERVED_NAME_QT_CURR_EMUL_CYCLE_.

Set probes (primitives) mt-16 {
flat nets = 497535, primitives = 483142, nodes = 341584; resident memory size: 996 MB (PDB pools size: 944 MB).

Set probes (subaction: finish) {
MTsetProbesMc: added 103 user nets for memory inputs.
MTsetProbesMc: added 44 user nets for memory inputs.
MTsetProbesMc: added 183 user nets for memory inputs.
elapsed time: 0 sec.
} // Set probes (subaction: finish)
elapsed time: 0 sec.
} // Set probes (primitives) mt-16
Total memory probes set: 7962 (50 MPR ports).

Reduce probes (primitives) mt-16 {

Reduce probes (subaction: finish) {
elapsed time: 0 sec.
} // Reduce probes (subaction: finish)
elapsed time: 0 sec.
} // Reduce probes (primitives) mt-16
Number of virtual probes: 92956 (80820 + 12136) -> 67435 (27.5% reduction).

Clearing internal probes {

Clear secondary markers by mask (nets) mt-16 {

Clear secondary markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear secondary markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear secondary markers by mask (nets) mt-16

TraverseMarkUser.ForEachNet {
elapsed time: 0 sec.
} // TraverseMarkUser.ForEachNet

TraverseClearProbes.ForEachNet {
elapsed time: 1 sec.
} // TraverseClearProbes.ForEachNet
Number of virtual probes: 67435 -> 67179 (0.4% reduction).
elapsed time: 1 sec.
} // Clearing internal probes

Marking FV enabled regions {
elapsed time: 0 sec.
} // Marking FV enabled regions

Setting ECM probes {
} // Setting ECM probes

Storing probes {

Fixing FV probes in ECM {
Added 0 PI probes in module xc_top.
Added 0 PI probes in module ixc_time.
} // Fixing FV probes in ECM

TraversePhysProbes.ForEachNet {
elapsed time: 0 sec.
} // TraversePhysProbes.ForEachNet

Initializing RT data {
Init smNetIDs) elapsed time: 0 sec.
elapsed time: 0 sec.
} // Initializing RT data
REPORT (legacy-38397): Precompiler set 12204 input and 65262 virtual probes.
elapsed time: 0 sec.
} // Storing probes
elapsed time: 1 sec.
created 2 unnamed nets and 125 unnamed primitives.
flat nets = 497539, primitives = 483146, nodes = 341584; resident memory size: 3727 MB (PDB pools size: 944 MB).
} // FV instrumentation
elapsed time: 1 sec.
created 4 unnamed nets and 133 unnamed primitives.
flat nets = 497539, primitives = 483146, nodes = 341584; resident memory size: 3727 MB (PDB pools size: 944 MB).
} // Setting keepnets and probes

Inserting instrumentation logic {
flat nets = 497539, primitives = 483146, nodes = 341584; resident memory size: 999 MB (PDB pools size: 944 MB).
/lan/cva_rel/vxe23h1/23.03.131.s001/tools.lnx86/qtlib/sdl_ua.llib elapsed time: 0 sec.
REPORT (legacy-47659): Inserted 1 SDL instance for dynamic events.

Flattening {
flat nets = 497746, primitives = 483343, nodes = 341584; resident memory size: 1035 MB (PDB pools size: 960 MB).

Flattening (nodes) mt-16 {

Flattening (subaction: finish) {
elapsed time: 0 sec.
} // Flattening (subaction: finish)
elapsed time: 0 sec.
} // Flattening (nodes) mt-16

Flattening (nets) mt-16 {

Flattening (subaction: finish) {
elapsed time: 0 sec.
} // Flattening (subaction: finish)
elapsed time: 0 sec.
} // Flattening (nets) mt-16

Delete saved prims {
flat nets = 529938, primitives = 510635, nodes = 366843; resident memory size: 1039 MB (PDB pools size: 960 MB).
elapsed time: 0 sec.
flat nets = 529938, primitives = 510631, nodes = 366843; resident memory size: 1039 MB (PDB pools size: 960 MB).
} // Delete saved prims
elapsed time: 0 sec.
flat nets = 529938, primitives = 510631, nodes = 366843; resident memory size: 1039 MB (PDB pools size: 960 MB).
} // Flattening

Setting SDL keepnets {
elapsed time: 1 sec.
} // Setting SDL keepnets
elapsed time: 1 sec.
created 1835 unnamed nets and 2043 unnamed primitives.
flat nets = 542765, primitives = 519088, nodes = 366843; resident memory size: 1039 MB (PDB pools size: 960 MB).
} // Inserting instrumentation logic

Fixing IO {
flat nets = 542765, primitives = 519088, nodes = 366843; resident memory size: 1039 MB (PDB pools size: 960 MB).

Read-before-write memory ports {
instance: IXC_GFIFO.I.I.ixc_gfm_ififo port: IXC_GFIFO.I.I.U10465
instance: IXC_GFIFO.I.I.ixc_gfm_ififo port: IXC_GFIFO.I.I.U10464
instance: IXC_GFIFO.I.I.ixc_gfm_ififo port: IXC_GFIFO.I.I.U10463
instance: tb_top.kme_tb_dut._zygsfis_get_config_data_fifo port: tb_top.kme_tb_dut.U9874
} // Read-before-write memory ports
elapsed time: 0 sec.
created 960 unnamed nets and 2381 unnamed primitives.
flat nets = 545263, primitives = 521586, nodes = 366843; resident memory size: 1039 MB (PDB pools size: 960 MB).
} // Fixing IO

Building enables {

Creating and connecting enables {

Clear main markers (primitives) mt-16 {

Clear main markers (subaction: finish) {
elapsed time: 0 sec.
} // Clear main markers (subaction: finish)
elapsed time: 0 sec.
} // Clear main markers (primitives) mt-16

Connecting enables {

Connect enables (nets) mt-16 {

Connect enables (subaction: close pools) {
flat nets = 545289, primitives = 521597, nodes = 366859; resident memory size: 1041 MB (PDB pools size: 1024 MB).
elapsed time: 0 sec.
flat nets = 545299, primitives = 521607, nodes = 366859; resident memory size: 1081 MB (PDB pools size: 1024 MB).
} // Connect enables (subaction: close pools)

Connect enables (subaction: finish) {
flat nets = 545299, primitives = 521607, nodes = 366859; resident memory size: 1081 MB (PDB pools size: 1024 MB).
elapsed time: 0 sec.
flat nets = 545299, primitives = 521607, nodes = 366859; resident memory size: 1081 MB (PDB pools size: 1024 MB).
} // Connect enables (subaction: finish)
elapsed time: 0 sec.
flat nets = 545299, primitives = 521607, nodes = 366859; resident memory size: 1081 MB (PDB pools size: 1024 MB).
} // Connect enables (nets) mt-16

Connect enables (primitives) mt-16 {
flat nets = 545299, primitives = 521607, nodes = 366859; resident memory size: 1081 MB (PDB pools size: 1024 MB).

Connect enables (subaction: close pools) {
flat nets = 545315, primitives = 521607, nodes = 366875; resident memory size: 1089 MB (PDB pools size: 1184 MB).
elapsed time: 0 sec.
flat nets = 545324, primitives = 521616, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
} // Connect enables (subaction: close pools)

Connect enables (subaction: finish) {
flat nets = 545324, primitives = 521616, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
elapsed time: 0 sec.
flat nets = 545324, primitives = 521616, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
} // Connect enables (subaction: finish)
elapsed time: 0 sec.
flat nets = 545324, primitives = 521616, nodes = 366875; resident memory size: 3949 MB (PDB pools size: 1184 MB).
} // Connect enables (primitives) mt-16
elapsed time: 0 sec.
flat nets = 545324, primitives = 521616, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
} // Connecting enables
elapsed time: 0 sec.
flat nets = 545324, primitives = 521616, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
} // Creating and connecting enables
elapsed time: 0 sec.
flat nets = 545327, primitives = 521618, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
} // Building enables

Unset FV probes (nets) mt-16 {
flat nets = 545327, primitives = 521619, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).

Unset FV probes (subaction: finish) {
elapsed time: 0 sec.
} // Unset FV probes (subaction: finish)
elapsed time: 0 sec.
} // Unset FV probes (nets) mt-16

Disconnecting dangling buffers {
flat nets = 545327, primitives = 521619, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
elapsed time: 0 sec.
flat nets = 545327, primitives = 521619, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).
} // Disconnecting dangling buffers

Fixing sourceless nets {
flat nets = 545327, primitives = 521619, nodes = 366875; resident memory size: 1167 MB (PDB pools size: 1184 MB).

fix sourceless nets (nets) mt-16 {

fix sourceless nets (subaction: finish) {
elapsed time: 0 sec.
} // fix sourceless nets (subaction: finish)
elapsed time: 0 sec.
} // fix sourceless nets (nets) mt-16
elapsed time: 0 sec.
created 0 unnamed nets and 7788 unnamed primitives.
flat nets = 545327, primitives = 529407, nodes = 366875; resident memory size: 1169 MB (PDB pools size: 1184 MB).
} // Fixing sourceless nets

Saving deep logic {
flat nets = 545327, primitives = 529407, nodes = 366875; resident memory size: 1169 MB (PDB pools size: 1184 MB).
elapsed time: 0 sec.
flat nets = 547068, primitives = 531147, nodes = 366876; resident memory size: 1171 MB (PDB pools size: 1184 MB).
} // Saving deep logic

Calculate gate count (primitives) mt-16 {

Calculate gate count (subaction: finish) {
elapsed time: 0 sec.
} // Calculate gate count (subaction: finish)
elapsed time: 0 sec.
} // Calculate gate count (primitives) mt-16

Calculate gate count (nets) mt-16 {

Calculate gate count (subaction: finish) {
elapsed time: 0 sec.
} // Calculate gate count (subaction: finish)
elapsed time: 1 sec.
} // Calculate gate count (nets) mt-16
REPORT (legacy-1311): Internal database gate count after transformations (for statistics only): 1015696 (including memory access instrumentation: 1060734).
Number of DLY/DLYE = 101161; Number of PI probes = 15648; Number of FF probes = 65262 (out of which 21 are PI probes for verification).

Marking auto partitions {
flat nets = 547068, primitives = 531147, nodes = 366876; resident memory size: 1171 MB (PDB pools size: 1184 MB).

Saving net markers {

Saving net markers (nets) mt-16 {

Saving net markers (subaction: finish) {
elapsed time: 0 sec.
} // Saving net markers (subaction: finish)
elapsed time: 0 sec.
} // Saving net markers (nets) mt-16
elapsed time: 0 sec.
} // Saving net markers

Saving net secondary markers {

Saving net secondary markers (nets) mt-16 {

Saving net secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Saving net secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Saving net secondary markers (nets) mt-16
elapsed time: 0 sec.
} // Saving net secondary markers

Restoring net secondary markers {

Restoring net secondaty markers (nets) mt-16 {

Restoring net secondaty markers (subaction: finish) {
elapsed time: 0 sec.
} // Restoring net secondaty markers (subaction: finish)
elapsed time: 0 sec.
} // Restoring net secondaty markers (nets) mt-16
elapsed time: 0 sec.
} // Restoring net secondary markers

Restoring net markers {

Restoring net markers (nets) mt-16 {

Restoring net markers (subaction: finish) {
elapsed time: 0 sec.
} // Restoring net markers (subaction: finish)
elapsed time: 0 sec.
} // Restoring net markers (nets) mt-16
elapsed time: 0 sec.
} // Restoring net markers

Post partition optimization {
elapsed time: 0 sec.
} // Post partition optimization
elapsed time: 0 sec.
created 2 unnamed nets and 2 unnamed primitives.
flat nets = 547070, primitives = 531149, nodes = 366876; resident memory size: 4017 MB (PDB pools size: 1280 MB).
} // Marking auto partitions

Setting partition groups {

Creating partitions infrastructure {
Creating MDC directories elapsed time: 0 sec.
elapsed time: 0 sec.
} // Creating partitions infrastructure

Marking auto partitions {
flat nets = 547070, primitives = 531149, nodes = 366876; resident memory size: 1242 MB (PDB pools size: 1280 MB).

Saving net markers {

Saving net markers (nets) mt-16 {

Saving net markers (subaction: finish) {
elapsed time: 0 sec.
} // Saving net markers (subaction: finish)
elapsed time: 0 sec.
} // Saving net markers (nets) mt-16
elapsed time: 0 sec.
} // Saving net markers

Saving net secondary markers {

Saving net secondary markers (nets) mt-16 {

Saving net secondary markers (subaction: finish) {
elapsed time: 0 sec.
} // Saving net secondary markers (subaction: finish)
elapsed time: 0 sec.
} // Saving net secondary markers (nets) mt-16
elapsed time: 1 sec.
} // Saving net secondary markers

Restoring net secondary markers {

Restoring net secondaty markers (nets) mt-16 {

Restoring net secondaty markers (subaction: finish) {
elapsed time: 0 sec.
} // Restoring net secondaty markers (subaction: finish)
elapsed time: 0 sec.
} // Restoring net secondaty markers (nets) mt-16
elapsed time: 0 sec.
} // Restoring net secondary markers

Restoring net markers {

Restoring net markers (nets) mt-16 {

Restoring net markers (subaction: finish) {
elapsed time: 0 sec.
} // Restoring net markers (subaction: finish)
elapsed time: 0 sec.
} // Restoring net markers (nets) mt-16
elapsed time: 0 sec.
} // Restoring net markers

Post partition optimization {
elapsed time: 0 sec.
} // Post partition optimization
elapsed time: 1 sec.
created 2 unnamed nets and 2 unnamed primitives.
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 1272 MB (PDB pools size: 1280 MB).
} // Marking auto partitions

Update cross partition nets properties {

Marking additional cross-partition nets {

collect extra cross-partitions (nets) mt-16 {

collect extra cross-partitions (subaction: finish) {
elapsed time: 0 sec.
} // collect extra cross-partitions (subaction: finish)
elapsed time: 0 sec.
} // collect extra cross-partitions (nets) mt-16
elapsed time: 0 sec.
} // Marking additional cross-partition nets
elapsed time: 0 sec.
} // Update cross partition nets properties

Logging partitions information {

collect partitions stat (primitives) mt-16 {

collect partitions stat (subaction: finish) {
elapsed time: 0 sec.
} // collect partitions stat (subaction: finish)
elapsed time: 0 sec.
} // collect partitions stat (primitives) mt-16
elapsed time: 0 sec.
} // Logging partitions information

Saving partition markers {
elapsed time: 0 sec.
} // Saving partition markers
elapsed time: 1 sec.
} // Setting partition groups

Building Registry {
elapsed time: 0 sec.
} // Building Registry

Optimizing Registry {
elapsed time: 0 sec.
} // Optimizing Registry

Collecting ids and names {
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 1273 MB (PDB pools size: 1280 MB).

Initializing RT data {
Init smNetIDs) elapsed time: 0 sec.
Collecting 48093 names: 0 sec.
elapsed time: 0 sec.
} // Initializing RT data

Collecting IXCOM instrumentation nets {
elapsed time: 0 sec.
} // Collecting IXCOM instrumentation nets

Writing deep logic {
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 1275 MB (PDB pools size: 1280 MB).
elapsed time: 0 sec.
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 1275 MB (PDB pools size: 1280 MB).
} // Writing deep logic
elapsed time: 0 sec.
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 1275 MB (PDB pools size: 1280 MB).
} // Collecting ids and names

Saving netlist {
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 1275 MB (PDB pools size: 1280 MB).

Special nets {
qt_runback_ff_enable : '_ET3_COMPILER_RESERVED_NAME_DESIGN_FREEZE_'
qt_runback_ff_enable_ip : '_ET3_COMPILER_RESERVED_NAME_DESIGN_FREEZE_'
qt_runback_ff_enable_other : '_ET3_COMPILER_RESERVED_NAME_DESIGN_FREEZE_'
} // Special nets

Saving net markers {

Saving net markers (nets) mt-16 {

Saving net markers (subaction: finish) {
elapsed time: 0 sec.
} // Saving net markers (subaction: finish)
elapsed time: 0 sec.
} // Saving net markers (nets) mt-16
elapsed time: 0 sec.
} // Saving net markers

Creating BEDB {
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 1279 MB (PDB pools size: 1280 MB).
Create Side Files elapsed time: 0 sec.

Creating MDC infrastructure {

Restoring partition markers {
elapsed time: 0 sec.
} // Restoring partition markers

Clear main markers by mask (primitives) mt-16 {

Clear main markers by mask (subaction: finish) {
elapsed time: 0 sec.
} // Clear main markers by mask (subaction: finish)
elapsed time: 0 sec.
} // Clear main markers by mask (primitives) mt-16
Number of edge detectors: 25.
Number of instrumented resets: 2.

Running MDC jobs {

Restoring net markers {

Restoring net markers (nets) mt-16 {

Restoring net markers (subaction: finish) {
elapsed time: 0 sec.
} // Restoring net markers (subaction: finish)
elapsed time: 0 sec.
} // Restoring net markers (nets) mt-16
elapsed time: 0 sec.
} // Restoring net markers
elapsed time: 0 sec.
} // Running MDC jobs
Create Initial Proto elapsed time: 2 sec.
elapsed time: 2 sec.
} // Creating MDC infrastructure
elapsed time: 2 sec.
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 4021 MB (PDB pools size: 1280 MB).
} // Creating BEDB

Creating RT PDB {
BuildTopSignalsMap elapsed time: 0 sec.
SetupRtSynonyms elapsed time: 0 sec.
SetupIntIDs elapsed time: 0 sec.
Calculate Size elapsed time: 0 sec.
CalcSize elapsed time: 0 sec.
Initialization elapsed time: 0 sec.
Map Hierarchy elapsed time: 0 sec.
Traverse Registry 1 elapsed time: 0 sec.
Traverse Global Nets elapsed time: 0 sec.
Traverse Registry 2 elapsed time: 0 sec.
Map Registry elapsed time: 0 sec.
Expand Synonyms elapsed time: 0 sec.
Extra Synonyms elapsed time: 0 sec.
BuildSignalsMap elapsed time: 0 sec.
Correct Top Map elapsed time: 0 sec.
Correct Syn Map elapsed time: 0 sec.
Fix Flat2Syn elapsed time: 0 sec.
CorrectMaps elapsed time: 0 sec.
Save LogicalView elapsed time: 1 sec.
Save PoolVector elapsed time: 0 sec.
Saving rtPoolVector core1 elapsed time: 0 sec.
Saving rtPoolVector core2 elapsed time: 0 sec.
Saving rtPoolVector core7 elapsed time: 0 sec.
Saving rtPoolVector core3 elapsed time: 0 sec.
Saving rtPoolVector core4 elapsed time: 0 sec.
Saving rtPoolVector core6 elapsed time: 0 sec.
Saving rtPoolVector core5 elapsed time: 0 sec.
Save TopSignalsMap elapsed time: 0 sec.
Save Flat2SynVector elapsed time: 0 sec.
Save Nets elapsed time: 0 sec.
Saving rtPoolVector core0 elapsed time: 0 sec.
Save Signalsmap elapsed time: 1 sec.
Save Prims elapsed time: 1 sec.
Saving trConns core0 elapsed time: 1 sec.
Saving trConns core1 elapsed time: 0 sec.
Saving trConns core2 elapsed time: 0 sec.
Saving trConns core3 elapsed time: 0 sec.
Saving trConns core4 elapsed time: 0 sec.
Saving trConns core5 elapsed time: 0 sec.
Saving trConns core6 elapsed time: 0 sec.
Saving trConns core7 elapsed time: 0 sec.
Save Connectivity elapsed time: 1 sec.
SaveRunTimeDB elapsed time: 2 sec.

Saving CRT data {

Restoring net markers {

Restoring net markers (nets) mt-16 {

Restoring net markers (subaction: finish) {
elapsed time: 0 sec.
} // Restoring net markers (subaction: finish)
elapsed time: 0 sec.
} // Restoring net markers (nets) mt-16
elapsed time: 0 sec.
} // Restoring net markers

Marking NORANDOM logic {
elapsed time: 0 sec.
} // Marking NORANDOM logic

Calculate FF probes (nets) mt-16 {

Calculate FF probes (subaction: finish) {
elapsed time: 0 sec.
} // Calculate FF probes (subaction: finish)
elapsed time: 0 sec.
} // Calculate FF probes (nets) mt-16

TraverseWriteRandInit.ForEachNet {
elapsed time: 0 sec.
} // TraverseWriteRandInit.ForEachNet

TraverseWriteInit0.ForEachNet {
elapsed time: 0 sec.
} // TraverseWriteInit0.ForEachNet
elapsed time: 0 sec.
} // Saving CRT data
elapsed time: 2 sec.
} // Creating RT PDB
elapsed time: 4 sec.
flat nets = 547072, primitives = 531149, nodes = 366876; resident memory size: 4633 MB (PDB pools size: 1344 MB).
} // Saving netlist

Saving DADB snapshot {
Init smNetIDs) elapsed time: 1 sec.
elapsed time: 1 sec.
} // Saving DADB snapshot
Precompiler elapsed time: 10 sec
  Flattening DUT: 1 sec (10.0%)
  Cleaning: 1 sec (10.0%)
  1X mode analysis: 1 sec (10.0%)
  Building netlist: 1 sec (10.0%)
  Setting probes: 1 sec (10.0%)
  SDL instrumentation: 1 sec (10.0%)
  Partitioning: 1 sec (10.0%)
  Saving BEDB: 2 sec (20.0%)
  PDB internals: 1 sec (10.0%)
Resident memory peak 4021 MB is reached at exit from 'Creating BEDB'.
--------
Post-precompiler extras (+3 sec):
  Saving PDB: +3 sec (+30.0%)
Resident memory peak 4633 MB is reached at exit from 'Saving netlist'.
--------

### STOP: Thu May  9 14:43:26 2024

